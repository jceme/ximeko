28 Feb 2015 16:44:27,988 INFO  ~ Starting c:\ximeko
28 Feb 2015 16:44:28,987 WARN  ~ You're running Play! in DEV mode
28 Feb 2015 16:44:29,078 INFO  ~ Listening for HTTP on port 9000 (Waiting a first request to start) ...
28 Feb 2015 16:44:39,934 DEBUG ~ Configuring ehcache from ehcache.xml found in the classpath: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:44:39,938 DEBUG ~ Configuring ehcache from URL: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:44:39,939 DEBUG ~ Configuring ehcache from InputStream
28 Feb 2015 16:44:39,953 DEBUG ~ Ignoring ehcache attribute xmlns:xsi
28 Feb 2015 16:44:39,954 DEBUG ~ Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
28 Feb 2015 16:44:39,968 DEBUG ~ Creating new CacheManager with default config
28 Feb 2015 16:44:39,973 DEBUG ~ propertiesString is null.
28 Feb 2015 16:44:39,982 DEBUG ~ No CacheManagerEventListenerFactory class specified. Skipping...
28 Feb 2015 16:44:40,130 DEBUG ~ No BootstrapCacheLoaderFactory class specified. Skipping...
28 Feb 2015 16:44:40,130 DEBUG ~ CacheWriter factory not configured. Skipping...
28 Feb 2015 16:44:40,131 DEBUG ~ No CacheExceptionHandlerFactory class specified. Skipping...
28 Feb 2015 16:44:40,153 DEBUG ~ Initialized net.sf.ehcache.store.NotifyingMemoryStore for play
28 Feb 2015 16:44:40,159 DEBUG ~ Initialised cache: play
28 Feb 2015 16:44:40,161 DEBUG ~ CacheDecoratorFactory not configured for defaultCache. Skipping for 'play'.
28 Feb 2015 16:44:40,478 INFO  ~ Connected to jdbc:mysql://localhost/ximeko for default
28 Feb 2015 16:44:40,507 DEBUG ~ Logging Provider: org.jboss.logging.Log4jLoggerProvider
28 Feb 2015 16:44:40,525 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,525 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,526 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,527 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3524a319
28 Feb 2015 16:44:40,528 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@20fb52cd
28 Feb 2015 16:44:40,529 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@2ce2006c
28 Feb 2015 16:44:40,530 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,531 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,531 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,532 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,533 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,533 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,535 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,535 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,536 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,538 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,538 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,538 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,540 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,540 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,541 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,543 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,543 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,543 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,545 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,545 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,546 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,547 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:44:40,548 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:44:40,549 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:44:40,550 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:44:40,551 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:40,552 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:40,553 DEBUG ~ Adding type registration nstring -> org.hibernate.type.StringNVarcharType@312cd9dc
28 Feb 2015 16:44:40,555 DEBUG ~ Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f0ec102
28 Feb 2015 16:44:40,556 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:44:40,557 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:44:40,559 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:44:40,560 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:44:40,565 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:44:40,565 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:44:40,567 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,568 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,568 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,580 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@126680a
28 Feb 2015 16:44:40,604 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,604 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,605 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,606 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4656b3b1
28 Feb 2015 16:44:40,607 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:44:40,608 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:44:40,609 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:44:40,609 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:44:40,610 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:44:40,611 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:44:40,612 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:44:40,612 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:44:40,614 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:44:40,614 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:44:40,615 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eaee30f
28 Feb 2015 16:44:40,617 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fa0939
28 Feb 2015 16:44:40,618 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,619 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,619 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,632 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,632 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,633 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,634 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@68cbb203
28 Feb 2015 16:44:40,635 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,641 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,641 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,642 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,643 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,643 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,658 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@7aea68c0
28 Feb 2015 16:44:40,660 DEBUG ~ Adding type registration ntext -> org.hibernate.type.NTextType@3d39f2c8
28 Feb 2015 16:44:40,663 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:44:40,663 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:44:40,664 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a56d026
28 Feb 2015 16:44:40,676 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:44:40,689 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:44:40,691 DEBUG ~ Adding type registration nclob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:44:40,692 DEBUG ~ Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:44:40,693 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3475ebe8
28 Feb 2015 16:44:40,699 DEBUG ~ Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59f0780c
28 Feb 2015 16:44:40,701 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@74427903
28 Feb 2015 16:44:40,706 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:44:40,708 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:44:40,710 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@529fcfc1
28 Feb 2015 16:44:40,712 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a00b247
28 Feb 2015 16:44:40,713 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43b891e4
28 Feb 2015 16:44:40,715 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a723278
28 Feb 2015 16:44:40,716 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f4f69a3
28 Feb 2015 16:44:40,717 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66a07502
28 Feb 2015 16:44:40,729 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30620af1
28 Feb 2015 16:44:40,730 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74bc6d07
28 Feb 2015 16:44:40,759 INFO  ~ HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
28 Feb 2015 16:44:40,785 INFO  ~ HHH000412: Hibernate Core {4.2.15.Final}
28 Feb 2015 16:44:40,789 INFO  ~ HHH000206: hibernate.properties not found
28 Feb 2015 16:44:40,790 INFO  ~ HHH000021: Bytecode provider name : javassist
28 Feb 2015 16:44:40,803 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
28 Feb 2015 16:44:40,804 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
28 Feb 2015 16:44:40,805 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:44:40,806 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:44:40,807 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
28 Feb 2015 16:44:40,808 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
28 Feb 2015 16:44:40,810 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
28 Feb 2015 16:44:40,810 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
28 Feb 2015 16:44:40,811 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
28 Feb 2015 16:44:40,812 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
28 Feb 2015 16:44:40,813 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
28 Feb 2015 16:44:40,813 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
28 Feb 2015 16:44:40,814 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
28 Feb 2015 16:44:40,815 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
28 Feb 2015 16:44:40,816 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
28 Feb 2015 16:44:40,818 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,819 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,819 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:44:40,819 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3524a319
28 Feb 2015 16:44:40,820 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@20fb52cd
28 Feb 2015 16:44:40,821 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@2ce2006c
28 Feb 2015 16:44:40,821 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,821 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,822 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:44:40,824 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,824 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,825 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:44:40,826 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,826 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,840 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:44:40,840 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,840 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,841 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:44:40,841 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,850 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,850 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:44:40,850 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,851 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,851 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:44:40,863 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,863 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,863 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:44:40,864 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:44:40,864 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:44:40,879 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:44:40,879 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:44:40,880 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:40,880 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:40,881 DEBUG ~ Adding type registration nstring -> org.hibernate.type.StringNVarcharType@312cd9dc
28 Feb 2015 16:44:40,895 DEBUG ~ Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f0ec102
28 Feb 2015 16:44:40,895 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:44:40,896 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:44:40,896 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:44:40,896 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:44:40,907 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:44:40,908 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:44:40,908 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,908 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,909 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:44:40,913 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@126680a
28 Feb 2015 16:44:40,913 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,914 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,914 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:44:40,915 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4656b3b1
28 Feb 2015 16:44:40,926 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:44:40,926 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:44:40,927 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:44:40,927 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:44:40,928 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:44:40,939 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:44:40,940 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:44:40,940 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:44:40,941 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:44:40,949 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:44:40,949 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eaee30f
28 Feb 2015 16:44:40,950 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fa0939
28 Feb 2015 16:44:40,950 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,951 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,962 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:44:40,962 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,963 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,963 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:44:40,963 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@68cbb203
28 Feb 2015 16:44:40,976 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,977 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,977 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:44:40,977 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,978 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,992 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:44:40,993 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@7aea68c0
28 Feb 2015 16:44:40,993 DEBUG ~ Adding type registration ntext -> org.hibernate.type.NTextType@3d39f2c8
28 Feb 2015 16:44:40,993 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:44:40,993 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:44:41,001 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a56d026
28 Feb 2015 16:44:41,002 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:44:41,002 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:44:41,003 DEBUG ~ Adding type registration nclob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:44:41,003 DEBUG ~ Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:44:41,012 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3475ebe8
28 Feb 2015 16:44:41,012 DEBUG ~ Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59f0780c
28 Feb 2015 16:44:41,012 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@74427903
28 Feb 2015 16:44:41,013 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:44:41,013 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:44:41,028 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6cd415b2
28 Feb 2015 16:44:41,029 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57dc90ef
28 Feb 2015 16:44:41,029 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51af67f9
28 Feb 2015 16:44:41,030 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52d33654
28 Feb 2015 16:44:41,030 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2893ef47
28 Feb 2015 16:44:41,044 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8423321
28 Feb 2015 16:44:41,044 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@322abfc3
28 Feb 2015 16:44:41,044 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1493b4f0
28 Feb 2015 16:44:41,045 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
28 Feb 2015 16:44:41,045 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
28 Feb 2015 16:44:41,057 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:44:41,057 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:44:41,057 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
28 Feb 2015 16:44:41,058 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
28 Feb 2015 16:44:41,058 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
28 Feb 2015 16:44:41,075 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
28 Feb 2015 16:44:41,075 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
28 Feb 2015 16:44:41,076 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
28 Feb 2015 16:44:41,076 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
28 Feb 2015 16:44:41,076 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
28 Feb 2015 16:44:41,084 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
28 Feb 2015 16:44:41,085 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
28 Feb 2015 16:44:41,085 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
28 Feb 2015 16:44:41,125 DEBUG ~ Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
28 Feb 2015 16:44:41,125 DEBUG ~ Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
28 Feb 2015 16:44:41,140 DEBUG ~ No JNDI name configured for binding Ejb3Configuration
28 Feb 2015 16:44:41,149 DEBUG ~ Preparing to build session factory with filters : {}
28 Feb 2015 16:44:41,156 INFO  ~ HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
28 Feb 2015 16:44:41,166 DEBUG ~ Database ->
       name : MySQL
    version : 5.6.21
      major : 5
      minor : 6
28 Feb 2015 16:44:41,167 DEBUG ~ Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.30 ( Revision: alexander.soklakov@oracle.com-20140310090514-8xt1yoht5ksg2e7c )
      major : 5
      minor : 1
28 Feb 2015 16:44:41,168 DEBUG ~ JDBC version : 4.0
28 Feb 2015 16:44:41,188 INFO  ~ HHH000400: Using dialect: play.db.jpa.MySQLDialect
28 Feb 2015 16:44:41,209 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:44:41,210 DEBUG ~ Process annotated classes
28 Feb 2015 16:44:41,218 DEBUG ~ Binding entity from annotated class: models.XingContact
28 Feb 2015 16:44:41,229 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:44:41,231 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:44:41,237 DEBUG ~ Import with entity name XingContact
28 Feb 2015 16:44:41,241 DEBUG ~ Bind entity models.XingContact on table XingContact
28 Feb 2015 16:44:41,284 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,288 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:44:41,292 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:44:41,294 DEBUG ~ Building property mainId
28 Feb 2015 16:44:41,298 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,299 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:44:41,299 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:44:41,299 DEBUG ~ Building property active_email
28 Feb 2015 16:44:41,301 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=display_name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,301 DEBUG ~ MetadataSourceProcessor property display_name with lazy=false
28 Feb 2015 16:44:41,301 DEBUG ~ building SimpleValue for display_name
28 Feb 2015 16:44:41,302 DEBUG ~ Building property display_name
28 Feb 2015 16:44:41,302 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,303 DEBUG ~ MetadataSourceProcessor property firstName with lazy=false
28 Feb 2015 16:44:41,303 DEBUG ~ building SimpleValue for firstName
28 Feb 2015 16:44:41,303 DEBUG ~ Building property firstName
28 Feb 2015 16:44:41,304 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,304 DEBUG ~ MetadataSourceProcessor property name with lazy=false
28 Feb 2015 16:44:41,305 DEBUG ~ building SimpleValue for name
28 Feb 2015 16:44:41,306 DEBUG ~ Building property name
28 Feb 2015 16:44:41,307 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=permalink, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,307 DEBUG ~ MetadataSourceProcessor property permalink with lazy=false
28 Feb 2015 16:44:41,308 DEBUG ~ building SimpleValue for permalink
28 Feb 2015 16:44:41,308 DEBUG ~ Building property permalink
28 Feb 2015 16:44:41,310 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:44:41,310 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=user, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,314 DEBUG ~ Building property user
28 Feb 2015 16:44:41,315 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=xingId, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:44:41,315 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:44:41,315 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:44:41,316 DEBUG ~ Building property xingId
28 Feb 2015 16:44:41,317 DEBUG ~ Binding entity from annotated class: models.User
28 Feb 2015 16:44:41,317 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:44:41,319 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:44:41,319 DEBUG ~ Import with entity name User
28 Feb 2015 16:44:41,319 DEBUG ~ Bind entity models.User on table User
28 Feb 2015 16:44:41,341 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,342 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:44:41,342 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:44:41,342 DEBUG ~ Building property mainId
28 Feb 2015 16:44:41,343 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,343 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:44:41,344 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:44:41,344 DEBUG ~ Building property active_email
28 Feb 2015 16:44:41,345 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:44:41,345 DEBUG ~ MetadataSourceProcessor property email with lazy=false
28 Feb 2015 16:44:41,345 DEBUG ~ building SimpleValue for email
28 Feb 2015 16:44:41,345 DEBUG ~ Building property email
28 Feb 2015 16:44:41,346 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,346 DEBUG ~ MetadataSourceProcessor property password with lazy=false
28 Feb 2015 16:44:41,346 DEBUG ~ building SimpleValue for password
28 Feb 2015 16:44:41,347 DEBUG ~ Building property password
28 Feb 2015 16:44:41,347 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentAtFair, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,348 DEBUG ~ MetadataSourceProcessor property presentAtFair with lazy=false
28 Feb 2015 16:44:41,348 DEBUG ~ building SimpleValue for presentAtFair
28 Feb 2015 16:44:41,348 DEBUG ~ Building property presentAtFair
28 Feb 2015 16:44:41,348 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentFriday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,349 DEBUG ~ MetadataSourceProcessor property presentFriday with lazy=false
28 Feb 2015 16:44:41,349 DEBUG ~ building SimpleValue for presentFriday
28 Feb 2015 16:44:41,349 DEBUG ~ Building property presentFriday
28 Feb 2015 16:44:41,350 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentMonday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,351 DEBUG ~ MetadataSourceProcessor property presentMonday with lazy=false
28 Feb 2015 16:44:41,351 DEBUG ~ building SimpleValue for presentMonday
28 Feb 2015 16:44:41,351 DEBUG ~ Building property presentMonday
28 Feb 2015 16:44:41,352 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSaturday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,352 DEBUG ~ MetadataSourceProcessor property presentSaturday with lazy=false
28 Feb 2015 16:44:41,352 DEBUG ~ building SimpleValue for presentSaturday
28 Feb 2015 16:44:41,354 DEBUG ~ Building property presentSaturday
28 Feb 2015 16:44:41,355 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSunday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,355 DEBUG ~ MetadataSourceProcessor property presentSunday with lazy=false
28 Feb 2015 16:44:41,356 DEBUG ~ building SimpleValue for presentSunday
28 Feb 2015 16:44:41,356 DEBUG ~ Building property presentSunday
28 Feb 2015 16:44:41,358 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentThursday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,359 DEBUG ~ MetadataSourceProcessor property presentThursday with lazy=false
28 Feb 2015 16:44:41,359 DEBUG ~ building SimpleValue for presentThursday
28 Feb 2015 16:44:41,360 DEBUG ~ Building property presentThursday
28 Feb 2015 16:44:41,365 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentTuesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,365 DEBUG ~ MetadataSourceProcessor property presentTuesday with lazy=false
28 Feb 2015 16:44:41,365 DEBUG ~ building SimpleValue for presentTuesday
28 Feb 2015 16:44:41,365 DEBUG ~ Building property presentTuesday
28 Feb 2015 16:44:41,365 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentWednesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,371 DEBUG ~ MetadataSourceProcessor property presentWednesday with lazy=false
28 Feb 2015 16:44:41,371 DEBUG ~ building SimpleValue for presentWednesday
28 Feb 2015 16:44:41,372 DEBUG ~ Building property presentWednesday
28 Feb 2015 16:44:41,372 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:44:41,372 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,375 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=null, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,380 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=element, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,380 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts_KEY, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,381 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='xingContacts_KEY', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:44:41,382 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:44:41,382 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:44:41,383 DEBUG ~ Collection role: models.User.xingContacts
28 Feb 2015 16:44:41,385 DEBUG ~ Building property xingContacts
28 Feb 2015 16:44:41,386 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingId, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:44:41,386 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:44:41,387 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:44:41,388 DEBUG ~ Building property xingId
28 Feb 2015 16:44:41,389 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:44:41,389 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:44:41,389 DEBUG ~ Setting SimpleValue typeName for display_name
28 Feb 2015 16:44:41,390 DEBUG ~ Setting SimpleValue typeName for firstName
28 Feb 2015 16:44:41,390 DEBUG ~ Setting SimpleValue typeName for name
28 Feb 2015 16:44:41,390 DEBUG ~ Setting SimpleValue typeName for permalink
28 Feb 2015 16:44:41,391 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:44:41,391 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:44:41,392 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:44:41,392 DEBUG ~ Setting SimpleValue typeName for email
28 Feb 2015 16:44:41,393 DEBUG ~ Setting SimpleValue typeName for password
28 Feb 2015 16:44:41,396 DEBUG ~ Setting SimpleValue typeName for presentAtFair
28 Feb 2015 16:44:41,396 DEBUG ~ Setting SimpleValue typeName for presentFriday
28 Feb 2015 16:44:41,397 DEBUG ~ Setting SimpleValue typeName for presentMonday
28 Feb 2015 16:44:41,397 DEBUG ~ Setting SimpleValue typeName for presentSaturday
28 Feb 2015 16:44:41,397 DEBUG ~ Setting SimpleValue typeName for presentSunday
28 Feb 2015 16:44:41,397 DEBUG ~ Setting SimpleValue typeName for presentThursday
28 Feb 2015 16:44:41,400 DEBUG ~ Setting SimpleValue typeName for presentTuesday
28 Feb 2015 16:44:41,401 DEBUG ~ Setting SimpleValue typeName for presentWednesday
28 Feb 2015 16:44:41,401 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:44:41,402 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:44:41,407 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,408 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,408 DEBUG ~ Processing collection mappings
28 Feb 2015 16:44:41,408 DEBUG ~ Second pass for collection: models.User.xingContacts
28 Feb 2015 16:44:41,409 DEBUG ~ Binding a OneToMany: models.User.xingContacts through an association table
28 Feb 2015 16:44:41,412 DEBUG ~ Mapped collection key: User_id, element: xingContacts_id
28 Feb 2015 16:44:41,413 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:44:41,413 DEBUG ~ Processing association property references
28 Feb 2015 16:44:41,413 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:44:41,414 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:44:41,414 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:44:41,414 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,415 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,421 DEBUG ~ Automatic flush during beforeCompletion(): disabled
28 Feb 2015 16:44:41,422 DEBUG ~ Automatic session close at end of transaction: disabled
28 Feb 2015 16:44:41,422 DEBUG ~ JDBC batch size: 15
28 Feb 2015 16:44:41,423 DEBUG ~ JDBC batch updates for versioned data: disabled
28 Feb 2015 16:44:41,423 DEBUG ~ Scrollable result sets: enabled
28 Feb 2015 16:44:41,423 DEBUG ~ Wrap result sets: disabled
28 Feb 2015 16:44:41,423 DEBUG ~ JDBC3 getGeneratedKeys(): enabled
28 Feb 2015 16:44:41,424 DEBUG ~ multi-tenancy strategy : NONE
28 Feb 2015 16:44:41,424 DEBUG ~ Connection release mode: auto
28 Feb 2015 16:44:41,424 INFO  ~ HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
28 Feb 2015 16:44:41,428 DEBUG ~ Using BatchFetchStyle : LEGACY
28 Feb 2015 16:44:41,429 DEBUG ~ Maximum outer join fetch depth: 2
28 Feb 2015 16:44:41,429 DEBUG ~ Default batch fetch size: 1
28 Feb 2015 16:44:41,430 DEBUG ~ Generate SQL with comments: disabled
28 Feb 2015 16:44:41,430 DEBUG ~ Order SQL updates by primary key: disabled
28 Feb 2015 16:44:41,431 DEBUG ~ Order SQL inserts for batching: disabled
28 Feb 2015 16:44:41,431 DEBUG ~ Default null ordering: none
28 Feb 2015 16:44:41,432 DEBUG ~ Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
28 Feb 2015 16:44:41,434 INFO  ~ HHH000397: Using ASTQueryTranslatorFactory
28 Feb 2015 16:44:41,435 DEBUG ~ Query language substitutions: {}
28 Feb 2015 16:44:41,436 DEBUG ~ JPA-QL strict compliance: enabled
28 Feb 2015 16:44:41,436 DEBUG ~ Second-level cache: enabled
28 Feb 2015 16:44:41,436 DEBUG ~ Query cache: disabled
28 Feb 2015 16:44:41,437 DEBUG ~ Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
28 Feb 2015 16:44:41,437 DEBUG ~ org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
28 Feb 2015 16:44:41,442 DEBUG ~ Optimize cache for minimal puts: disabled
28 Feb 2015 16:44:41,443 DEBUG ~ Structured second-level cache entries: disabled
28 Feb 2015 16:44:41,443 DEBUG ~ Second-level cache direct-reference entries: disabled
28 Feb 2015 16:44:41,443 DEBUG ~ Statistics: disabled
28 Feb 2015 16:44:41,443 DEBUG ~ Deleted entity synthetic identifier rollback: disabled
28 Feb 2015 16:44:41,446 DEBUG ~ Default entity-mode: pojo
28 Feb 2015 16:44:41,447 DEBUG ~ Named query checking : enabled
28 Feb 2015 16:44:41,447 DEBUG ~ Check Nullability in Core (should be disabled when Bean Validation is on): enabled
28 Feb 2015 16:44:41,447 DEBUG ~ Allow initialization of lazy state outside session : : disabled
28 Feb 2015 16:44:41,448 DEBUG ~ JTA Track by Thread: enabled
28 Feb 2015 16:44:41,452 DEBUG ~ Building session factory
28 Feb 2015 16:44:41,464 DEBUG ~ Session factory constructed with filter configurations : {}
28 Feb 2015 16:44:41,465 DEBUG ~ Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, application.path=c:\ximeko, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, sun.nio.ch.bugLevel=, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_60\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_60\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_60-b19, hibernate.connection.autocommit=true, user.name=just, com.mchange.v2.log.MLog=com.mchange.v2.log.log4j.Log4jMLog, play.version=1.3.0, hibernate.connection.release_mode=auto, user.language=de, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_60\jre\bin, db.user=root, java.version=1.7.0_60, user.timezone=Europe/Berlin, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, javax.persistence.provider=org.hibernate.ejb.HibernatePersistence, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=DE, java.home=C:\Program Files\Java\jdk1.7.0_60\jre, java.vm.info=mixed mode, os.version=6.3, db.pass=test, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeo75971ly94ztyc68i3|4a83faf, dataSourceName -> 1hgeo75971ly94ztyc68i3|4a83faf ], hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=24.60-b09, db.destroyMethod=close, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\just, db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0, java.specification.vendor=Oracle Corporation, db.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Vagrant\bin;C:\Program Files\Java\jdk1.7.0_60\bin;C:\Program Files (x86)\Git\cmd;C:\play\play1-1.3.0;C:\Download\maven\apache-maven-3.0.5\bin;., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=play.db.jpa.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=play.server.Server , java.class.path=c:\ximeko\conf;C:\play\play1-1.3.0\framework\play-1.3.0.jar;c:\ximeko\lib\gson-2.3.1-javadoc.jar;c:\ximeko\lib\scribe-1.3.7.jar;C:\play\play1-1.3.0\modules\testrunner\lib\play-testrunner.jar;C:\play\play1-1.3.0\modules\docviewer\lib\play-docviewer.jar;C:\play\play1-1.3.0\framework\lib\activation-1.1.1.jar;C:\play\play1-1.3.0\framework\lib\antlr-2.7.7.jar;C:\play\play1-1.3.0\framework\lib\asm-all-5.0.3.jar;C:\play\play1-1.3.0\framework\lib\async-http-client-1.8.14.jar;C:\play\play1-1.3.0\framework\lib\bcprov-jdk15-1.45.jar;C:\play\play1-1.3.0\framework\lib\c3p0-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\c3p0-oracle-thin-extras-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\cglib-nodep-3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-beanutils-1.8.3.jar;C:\play\play1-1.3.0\framework\lib\commons-codec-1.8.jar;C:\play\play1-1.3.0\framework\lib\commons-collections-3.2.1.jar;C:\play\play1-1.3.0\framework\lib\commons-email-1.3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-fileupload-1.3.jar;C:\play\play1-1.3.0\framework\lib\commons-io-2.4.jar;C:\play\play1-1.3.0\framework\lib\commons-javaflow-1590792.jar;C:\play\play1-1.3.0\framework\lib\commons-lang-2.6.jar;C:\play\play1-1.3.0\framework\lib\commons-logging-1.1.3.jar;C:\play\play1-1.3.0\framework\lib\dom4j-1.6.1.jar;C:\play\play1-1.3.0\framework\lib\ehcache-core-2.6.9.jar;C:\play\play1-1.3.0\framework\lib\ezmorph-1.0.6.jar;C:\play\play1-1.3.0\framework\lib\geronimo-servlet_2.5_spec-1.2.jar;C:\play\play1-1.3.0\framework\lib\groovy-all-2.3.6.jar;C:\play\play1-1.3.0\framework\lib\gson-2.2.4.jar;C:\play\play1-1.3.0\framework\lib\h2-1.3.176.jar;C:\play\play1-1.3.0\framework\lib\hamcrest-core-1.3.jar;C:\play\play1-1.3.0\framework\lib\hibernate-c3p0-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-commons-annotations-4.0.2.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-core-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-entitymanager-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-validator-4.1.0.Final.jar;C:\play\play1-1.3.0\framework\lib\ivy-2.3.0.jar;C:\play\play1-1.3.0\framework\lib\jamon-2.75.jar;C:\play\play1-1.3.0\framework\lib\javassist-3.19.0-GA.jar;C:\play\play1-1.3.0\framework\lib\javax.inject-1.0.jar;C:\play\play1-1.3.0\framework\lib\jaxen-1.1.jar;C:\play\play1-1.3.0\framework\lib\jboss-logging-3.1.0.GA.jar;C:\play\play1-1.3.0\framework\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\jj-imaging.jar;C:\play\play1-1.3.0\framework\lib\jj-simplecaptcha.jar;C:\play\play1-1.3.0\framework\lib\jj-textile.jar;C:\play\play1-1.3.0\framework\lib\jj-wikitext.jar;C:\play\play1-1.3.0\framework\lib\joda-time-2.5.jar;C:\play\play1-1.3.0\framework\lib\jregex-1.2_01.jar;C:\play\play1-1.3.0\framework\lib\jsr107cache-1.0.jar;C:\play\play1-1.3.0\framework\lib\junit-4.11.jar;C:\play\play1-1.3.0\framework\lib\log4j-1.2.17.jar;C:\play\play1-1.3.0\framework\lib\mail-1.4.7.jar;C:\play\play1-1.3.0\framework\lib\mchange-commons-java-0.2.9.jar;C:\play\play1-1.3.0\framework\lib\mysql-connector-java-5.1.30.jar;C:\play\play1-1.3.0\framework\lib\netty-3.9.4.Final.jar;C:\play\play1-1.3.0\framework\lib\org.eclipse.jdt.core-3.10.0.v20140604-1726.jar;C:\play\play1-1.3.0\framework\lib\oval-1.84.jar;C:\play\play1-1.3.0\framework\lib\postgresql-9.0.jar;C:\play\play1-1.3.0\framework\lib\signpost-core-1.2.1.2.jar;C:\play\play1-1.3.0\framework\lib\slf4j-api-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\slf4j-log4j12-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\snakeyaml-1.13.jar;C:\play\play1-1.3.0\framework\lib\spymemcached-2.10.3.jar;C:\play\play1-1.3.0\framework\lib\validation-api-1.0.0.GA.jar;C:\play\play1-1.3.0\framework\lib\xmlpull-1.1.3.1.jar;C:\play\play1-1.3.0\framework\lib\xstream-1.4.7.jar;C:\play\play1-1.3.0\framework/play-1.3.0.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, sun.os.patch.level=, hibernate.connection.provider_class=org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl, java.io.tmpdir=C:\Users\just\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, play.id=test, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\ext;C:\windows\Sun\Java\lib\ext, user.dir=c:\ximeko, javax.persistence.transaction=RESOURCE_LOCAL, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, play.debug=yes, file.encoding=utf-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7}
28 Feb 2015 16:44:41,514 INFO  ~ Hibernate Validator 4.1.0.Final
28 Feb 2015 16:44:41,518 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:44:41,520 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:44:41,523 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:44:41,536 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:44:41,537 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:44:41,538 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:44:41,614 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.XingContact
28 Feb 2015 16:44:41,617 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.XingContact
28 Feb 2015 16:44:41,617 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.XingContact
28 Feb 2015 16:44:41,619 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.User
28 Feb 2015 16:44:41,621 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.User
28 Feb 2015 16:44:41,622 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.User
28 Feb 2015 16:44:41,624 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,624 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,699 DEBUG ~ Static SQL for entity: models.XingContact
28 Feb 2015 16:44:41,700 DEBUG ~  Version select: select id from XingContact where id =?
28 Feb 2015 16:44:41,700 DEBUG ~  Snapshot select: select xingcontac_.id, xingcontac_.active_email as active_e2_2_, xingcontac_.display_name as display_3_2_, xingcontac_.firstName as firstNam4_2_, xingcontac_.name as name5_2_, xingcontac_.permalink as permalin6_2_, xingcontac_.user_id as user_id8_2_, xingcontac_.xingId as xingId7_2_ from XingContact xingcontac_ where xingcontac_.id=?
28 Feb 2015 16:44:41,700 DEBUG ~  Insert 0: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:44:41,701 DEBUG ~  Update 0: update XingContact set active_email=?, display_name=?, firstName=?, name=?, permalink=?, user_id=?, xingId=? where id=?
28 Feb 2015 16:44:41,701 DEBUG ~  Delete 0: delete from XingContact where id=?
28 Feb 2015 16:44:41,702 DEBUG ~  Identity insert: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId) values (?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:44:41,719 DEBUG ~ Static SQL for entity: models.User
28 Feb 2015 16:44:41,720 DEBUG ~  Version select: select id from User where id =?
28 Feb 2015 16:44:41,720 DEBUG ~  Snapshot select: select user_.id, user_.active_email as active_e2_0_, user_.email as email3_0_, user_.password as password4_0_, user_.presentAtFair as presentA5_0_, user_.presentFriday as presentF6_0_, user_.presentMonday as presentM7_0_, user_.presentSaturday as presentS8_0_, user_.presentSunday as presentS9_0_, user_.presentThursday as present10_0_, user_.presentTuesday as present11_0_, user_.presentWednesday as present12_0_, user_.xingId as xingId13_0_ from User user_ where user_.id=?
28 Feb 2015 16:44:41,721 DEBUG ~  Insert 0: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:44:41,722 DEBUG ~  Update 0: update User set active_email=?, email=?, password=?, presentAtFair=?, presentFriday=?, presentMonday=?, presentSaturday=?, presentSunday=?, presentThursday=?, presentTuesday=?, presentWednesday=?, xingId=? where id=?
28 Feb 2015 16:44:41,722 DEBUG ~  Delete 0: delete from User where id=?
28 Feb 2015 16:44:41,723 DEBUG ~  Identity insert: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:44:41,728 DEBUG ~ Static SQL for collection: models.User.xingContacts
28 Feb 2015 16:44:41,729 DEBUG ~  Row insert: insert into User_XingContact (User_id, xingContacts_id) values (?, ?)
28 Feb 2015 16:44:41,729 DEBUG ~  Row update: update User_XingContact set xingContacts_id=? where User_id=? and xingContacts_id=?
28 Feb 2015 16:44:41,729 DEBUG ~  Row delete: delete from User_XingContact where User_id=? and xingContacts_id=?
28 Feb 2015 16:44:41,730 DEBUG ~  One-shot delete: delete from User_XingContact where User_id=?
28 Feb 2015 16:44:41,746 DEBUG ~ Static select for entity models.XingContact [NONE]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:44:41,747 DEBUG ~ Static select for entity models.XingContact [READ]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:44:41,748 DEBUG ~ Static select for entity models.XingContact [UPGRADE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:44:41,749 DEBUG ~ Static select for entity models.XingContact [UPGRADE_NOWAIT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:44:41,750 DEBUG ~ Static select for entity models.XingContact [FORCE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:44:41,750 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_READ]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? lock in share mode
28 Feb 2015 16:44:41,751 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_WRITE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:44:41,752 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:44:41,758 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:44:41,758 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:44:41,766 DEBUG ~ Static select for action ACTION_MERGE on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:44:41,768 DEBUG ~ Static select for action ACTION_REFRESH on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:44:41,769 DEBUG ~ Static select for entity models.User [NONE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,774 DEBUG ~ Static select for entity models.User [READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,776 DEBUG ~ Static select for entity models.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:44:41,780 DEBUG ~ Static select for entity models.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:44:41,781 DEBUG ~ Static select for entity models.User [FORCE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:44:41,791 DEBUG ~ Static select for entity models.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? lock in share mode
28 Feb 2015 16:44:41,795 DEBUG ~ Static select for entity models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:44:41,796 DEBUG ~ Static select for entity models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:44:41,800 DEBUG ~ Static select for entity models.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,806 DEBUG ~ Static select for entity models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,810 DEBUG ~ Static select for action ACTION_MERGE on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,814 DEBUG ~ Static select for action ACTION_REFRESH on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:44:41,819 DEBUG ~ Static select for collection models.User.xingContacts: select xingcontac0_.User_id as User_id1_0_2_, xingcontac0_.xingContacts_id as xingCont2_1_2_, xingcontac1_.id as id1_2_0_, xingcontac1_.active_email as active_e2_2_0_, xingcontac1_.display_name as display_3_2_0_, xingcontac1_.firstName as firstNam4_2_0_, xingcontac1_.name as name5_2_0_, xingcontac1_.permalink as permalin6_2_0_, xingcontac1_.user_id as user_id8_2_0_, xingcontac1_.xingId as xingId7_2_0_, user2_.id as id1_0_1_, user2_.active_email as active_e2_0_1_, user2_.email as email3_0_1_, user2_.password as password4_0_1_, user2_.presentAtFair as presentA5_0_1_, user2_.presentFriday as presentF6_0_1_, user2_.presentMonday as presentM7_0_1_, user2_.presentSaturday as presentS8_0_1_, user2_.presentSunday as presentS9_0_1_, user2_.presentThursday as present10_0_1_, user2_.presentTuesday as present11_0_1_, user2_.presentWednesday as present12_0_1_, user2_.xingId as xingId13_0_1_ from User_XingContact xingcontac0_ inner join XingContact xingcontac1_ on xingcontac0_.xingContacts_id=xingcontac1_.id left outer join User user2_ on xingcontac1_.user_id=user2_.id where xingcontac0_.User_id=?
28 Feb 2015 16:44:41,827 DEBUG ~ Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@fd99cca
28 Feb 2015 16:44:41,827 DEBUG ~ Registering SessionFactory: 57772fea-f9b0-4b2f-b7aa-a4cbfea93ae9 (<unnamed>)
28 Feb 2015 16:44:41,828 DEBUG ~ Not binding SessionFactory to JNDI, no JNDI name configured
28 Feb 2015 16:44:41,830 DEBUG ~ Instantiated session factory
28 Feb 2015 16:44:41,836 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:44:41,836 DEBUG ~ Process annotated classes
28 Feb 2015 16:44:41,836 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:44:41,836 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,837 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,837 DEBUG ~ Processing collection mappings
28 Feb 2015 16:44:41,837 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:44:41,837 DEBUG ~ Processing association property references
28 Feb 2015 16:44:41,840 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:44:41,840 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:44:41,841 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:44:41,841 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,841 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,844 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,845 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,845 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:44:41,846 DEBUG ~ Process annotated classes
28 Feb 2015 16:44:41,846 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:44:41,846 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,849 DEBUG ~ Processing extends queue
28 Feb 2015 16:44:41,849 DEBUG ~ Processing collection mappings
28 Feb 2015 16:44:41,849 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:44:41,849 DEBUG ~ Processing association property references
28 Feb 2015 16:44:41,850 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:44:41,851 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:44:41,855 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:44:41,855 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,856 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:44:41,856 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,857 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,858 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,858 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:44:41,859 INFO  ~ HHH000227: Running hbm2ddl schema export
28 Feb 2015 16:44:41,860 DEBUG ~ Import file not found: /import.sql
28 Feb 2015 16:44:41,937 ERROR ~ HHH000389: Unsuccessful: drop table if exists XingContact
28 Feb 2015 16:44:41,937 ERROR ~ Cannot delete or update a parent row: a foreign key constraint fails
28 Feb 2015 16:44:41,998 ERROR ~ HHH000389: Unsuccessful: create table XingContact (id bigint not null auto_increment, active_email varchar(255), display_name varchar(255), firstName varchar(255), name varchar(255), permalink varchar(255), xingId varchar(255) not null, user_id bigint, primary key (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8
28 Feb 2015 16:44:41,998 ERROR ~ Table 'xingcontact' already exists
28 Feb 2015 16:44:42,085 ERROR ~ HHH000389: Unsuccessful: alter table XingContact add constraint UK_cudi8fu8pg51x41nlero79bfg unique (xingId)
28 Feb 2015 16:44:42,086 ERROR ~ Duplicate key name 'UK_cudi8fu8pg51x41nlero79bfg'
28 Feb 2015 16:44:42,246 ERROR ~ HHH000389: Unsuccessful: alter table XingContact add index FK_jf4260qdc0mn29ne235dcsjj5 (user_id), add constraint FK_jf4260qdc0mn29ne235dcsjj5 foreign key (user_id) references User (id)
28 Feb 2015 16:44:42,246 ERROR ~ Duplicate key name 'FK_jf4260qdc0mn29ne235dcsjj5'
28 Feb 2015 16:44:42,247 INFO  ~ HHH000230: Schema export complete
28 Feb 2015 16:44:42,247 DEBUG ~ Checking 0 named HQL queries
28 Feb 2015 16:44:42,247 DEBUG ~ Checking 0 named SQL queries
28 Feb 2015 16:44:42,252 DEBUG ~ Statistics initialized [enabled=false]
28 Feb 2015 16:44:42,285 DEBUG ~ Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@796706c0
28 Feb 2015 16:44:42,286 DEBUG ~ Registering EntityManagerFactory: d80a9653-2fff-4e7d-91b6-c31e9d5ed37e 
28 Feb 2015 16:44:42,290 INFO  ~ Application 'Xing Messe Kontakte' is now started !
28 Feb 2015 16:44:42,453 DEBUG ~ begin
28 Feb 2015 16:44:42,454 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:44:42,454 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:44:42,454 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:44:42,454 DEBUG ~ disabling autocommit
28 Feb 2015 16:44:43,182 DEBUG ~ committing
28 Feb 2015 16:44:43,183 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:44:43,184 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:44:43,185 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:44:43,186 DEBUG ~ Released JDBC connection
28 Feb 2015 16:44:53,697 DEBUG ~ begin
28 Feb 2015 16:44:53,698 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:44:53,698 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:44:53,698 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:44:53,699 DEBUG ~ disabling autocommit
28 Feb 2015 16:44:53,749 DEBUG ~ parse() - HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:44:53,755 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

28 Feb 2015 16:44:53,757 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:44:53,770 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:44:53,781 DEBUG ~ FromClause{level=1} : models.User (<no alias>) -> user0_
28 Feb 2015 16:44:53,786 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:44:53,787 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:53,788 DEBUG ~ Resolved : {synthetic-alias}.email -> user0_.email
28 Feb 2015 16:44:53,791 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:44:53,791 DEBUG ~ getDataType() : password -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:44:53,791 DEBUG ~ Resolved : {synthetic-alias}.password -> user0_.password
28 Feb 2015 16:44:53,792 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:44:53,792 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( AND ( = ( user0_.email {synthetic-alias} email ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
28 Feb 2015 16:44:53,797 DEBUG ~ Derived SELECT clause created.
28 Feb 2015 16:44:53,801 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:44:53,801 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:44:53,802 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@a60e57e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=ALL,propertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=models.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@a60e57e}

28 Feb 2015 16:44:53,805 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:44:53,818 DEBUG ~ HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:44:53,819 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_ where user0_.email=? and user0_.password=?
28 Feb 2015 16:44:53,825 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:44:53,851 DEBUG ~ committing
28 Feb 2015 16:44:53,852 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:44:53,852 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:44:53,853 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:44:53,854 DEBUG ~ Released JDBC connection
28 Feb 2015 16:44:53,883 DEBUG ~ begin
28 Feb 2015 16:44:53,884 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:44:53,884 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:44:53,884 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:44:53,885 DEBUG ~ disabling autocommit
28 Feb 2015 16:44:53,898 DEBUG ~ committing
28 Feb 2015 16:44:53,898 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:44:53,899 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:44:53,900 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:44:53,901 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:06,685 DEBUG ~ HHH000031: Closing
28 Feb 2015 16:47:06,686 DEBUG ~ Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
28 Feb 2015 16:47:06,687 DEBUG ~ Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
28 Feb 2015 16:47:06,687 DEBUG ~ Remove: name=d80a9653-2fff-4e7d-91b6-c31e9d5ed37e
28 Feb 2015 16:47:07,108 DEBUG ~ Configuring ehcache from ehcache.xml found in the classpath: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:47:07,109 DEBUG ~ Configuring ehcache from URL: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:47:07,109 DEBUG ~ Configuring ehcache from InputStream
28 Feb 2015 16:47:07,112 DEBUG ~ Ignoring ehcache attribute xmlns:xsi
28 Feb 2015 16:47:07,113 DEBUG ~ Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
28 Feb 2015 16:47:07,114 DEBUG ~ Creating new CacheManager with default config
28 Feb 2015 16:47:07,114 DEBUG ~ propertiesString is null.
28 Feb 2015 16:47:07,115 DEBUG ~ No CacheManagerEventListenerFactory class specified. Skipping...
28 Feb 2015 16:47:07,116 DEBUG ~ No BootstrapCacheLoaderFactory class specified. Skipping...
28 Feb 2015 16:47:07,116 DEBUG ~ CacheWriter factory not configured. Skipping...
28 Feb 2015 16:47:07,116 DEBUG ~ No CacheExceptionHandlerFactory class specified. Skipping...
28 Feb 2015 16:47:07,117 DEBUG ~ Initialized net.sf.ehcache.store.NotifyingMemoryStore for play
28 Feb 2015 16:47:07,118 DEBUG ~ Initialised cache: play
28 Feb 2015 16:47:07,118 DEBUG ~ CacheDecoratorFactory not configured for defaultCache. Skipping for 'play'.
28 Feb 2015 16:47:07,120 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:47:07,121 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:47:07,121 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:47:07,121 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3524a319
28 Feb 2015 16:47:07,121 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@20fb52cd
28 Feb 2015 16:47:07,122 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@2ce2006c
28 Feb 2015 16:47:07,122 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:47:07,122 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:47:07,123 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:47:07,123 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:47:07,123 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:47:07,124 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:47:07,124 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:47:07,124 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:47:07,125 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:47:07,136 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:47:07,136 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:47:07,136 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:47:07,137 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:47:07,137 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:47:07,146 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:47:07,146 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:47:07,146 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:47:07,147 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:47:07,147 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:47:07,153 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:47:07,153 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:47:07,154 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:47:07,154 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:47:07,154 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:47:07,163 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:47:07,163 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:47:07,164 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:47:07,164 DEBUG ~ Adding type registration nstring -> org.hibernate.type.StringNVarcharType@312cd9dc
28 Feb 2015 16:47:07,165 DEBUG ~ Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f0ec102
28 Feb 2015 16:47:07,165 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:47:07,165 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:47:07,165 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:47:07,166 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:47:07,166 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:47:07,173 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:47:07,173 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:47:07,173 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:47:07,174 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:47:07,174 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@126680a
28 Feb 2015 16:47:07,183 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:47:07,183 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:47:07,184 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:47:07,184 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4656b3b1
28 Feb 2015 16:47:07,184 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:47:07,201 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:47:07,201 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:47:07,202 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:47:07,202 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:47:07,202 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:47:07,220 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:47:07,221 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:47:07,221 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:47:07,222 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:47:07,222 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eaee30f
28 Feb 2015 16:47:07,237 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fa0939
28 Feb 2015 16:47:07,237 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:47:07,238 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:47:07,238 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:47:07,238 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:47:07,247 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:47:07,247 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:47:07,248 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@68cbb203
28 Feb 2015 16:47:07,248 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:47:07,248 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:47:07,261 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:47:07,262 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:47:07,262 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:47:07,262 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:47:07,263 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@7aea68c0
28 Feb 2015 16:47:07,275 DEBUG ~ Adding type registration ntext -> org.hibernate.type.NTextType@3d39f2c8
28 Feb 2015 16:47:07,275 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:47:07,275 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:47:07,276 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a56d026
28 Feb 2015 16:47:07,277 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:47:07,287 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:47:07,288 DEBUG ~ Adding type registration nclob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:47:07,288 DEBUG ~ Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:47:07,288 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3475ebe8
28 Feb 2015 16:47:07,288 DEBUG ~ Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59f0780c
28 Feb 2015 16:47:07,299 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@74427903
28 Feb 2015 16:47:07,299 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:47:07,300 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:47:07,300 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@222380e2
28 Feb 2015 16:47:07,301 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48e286f0
28 Feb 2015 16:47:07,309 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10091bf2
28 Feb 2015 16:47:07,309 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4609b517
28 Feb 2015 16:47:07,310 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27501ced
28 Feb 2015 16:47:07,310 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c9b1fc4
28 Feb 2015 16:47:07,310 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c42bcc5
28 Feb 2015 16:47:07,319 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51774036
28 Feb 2015 16:47:07,319 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
28 Feb 2015 16:47:07,321 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
28 Feb 2015 16:47:07,321 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:47:07,321 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:47:07,334 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
28 Feb 2015 16:47:07,334 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
28 Feb 2015 16:47:07,335 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
28 Feb 2015 16:47:07,335 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
28 Feb 2015 16:47:07,335 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
28 Feb 2015 16:47:07,347 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
28 Feb 2015 16:47:07,357 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
28 Feb 2015 16:47:07,357 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
28 Feb 2015 16:47:07,357 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
28 Feb 2015 16:47:07,357 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
28 Feb 2015 16:47:07,368 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
28 Feb 2015 16:47:07,370 DEBUG ~ Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
28 Feb 2015 16:47:07,371 DEBUG ~ Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
28 Feb 2015 16:47:07,371 DEBUG ~ No JNDI name configured for binding Ejb3Configuration
28 Feb 2015 16:47:07,380 DEBUG ~ Preparing to build session factory with filters : {}
28 Feb 2015 16:47:07,381 INFO  ~ HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
28 Feb 2015 16:47:07,382 DEBUG ~ Database ->
       name : MySQL
    version : 5.6.21
      major : 5
      minor : 6
28 Feb 2015 16:47:07,382 DEBUG ~ Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.30 ( Revision: alexander.soklakov@oracle.com-20140310090514-8xt1yoht5ksg2e7c )
      major : 5
      minor : 1
28 Feb 2015 16:47:07,395 DEBUG ~ JDBC version : 4.0
28 Feb 2015 16:47:07,401 INFO  ~ HHH000400: Using dialect: play.db.jpa.MySQLDialect
28 Feb 2015 16:47:07,402 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:47:07,403 DEBUG ~ Process annotated classes
28 Feb 2015 16:47:07,405 DEBUG ~ Binding entity from annotated class: models.XingContact
28 Feb 2015 16:47:07,406 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:47:07,407 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:47:07,407 DEBUG ~ Import with entity name XingContact
28 Feb 2015 16:47:07,408 DEBUG ~ Bind entity models.XingContact on table XingContact
28 Feb 2015 16:47:07,413 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,414 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:47:07,416 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:47:07,417 DEBUG ~ Building property mainId
28 Feb 2015 16:47:07,417 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,418 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:47:07,419 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:47:07,427 DEBUG ~ Building property active_email
28 Feb 2015 16:47:07,427 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=display_name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,427 DEBUG ~ MetadataSourceProcessor property display_name with lazy=false
28 Feb 2015 16:47:07,427 DEBUG ~ building SimpleValue for display_name
28 Feb 2015 16:47:07,428 DEBUG ~ Building property display_name
28 Feb 2015 16:47:07,439 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,439 DEBUG ~ MetadataSourceProcessor property firstName with lazy=false
28 Feb 2015 16:47:07,440 DEBUG ~ building SimpleValue for firstName
28 Feb 2015 16:47:07,440 DEBUG ~ Building property firstName
28 Feb 2015 16:47:07,441 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,452 DEBUG ~ MetadataSourceProcessor property name with lazy=false
28 Feb 2015 16:47:07,452 DEBUG ~ building SimpleValue for name
28 Feb 2015 16:47:07,453 DEBUG ~ Building property name
28 Feb 2015 16:47:07,453 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=permalink, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,454 DEBUG ~ MetadataSourceProcessor property permalink with lazy=false
28 Feb 2015 16:47:07,456 DEBUG ~ building SimpleValue for permalink
28 Feb 2015 16:47:07,456 DEBUG ~ Building property permalink
28 Feb 2015 16:47:07,456 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:47:07,457 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=user, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,457 DEBUG ~ Building property user
28 Feb 2015 16:47:07,457 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=xingId, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:47:07,469 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:47:07,469 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:47:07,470 DEBUG ~ Building property xingId
28 Feb 2015 16:47:07,470 DEBUG ~ Binding entity from annotated class: models.User
28 Feb 2015 16:47:07,471 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:47:07,485 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:47:07,486 DEBUG ~ Import with entity name User
28 Feb 2015 16:47:07,486 DEBUG ~ Bind entity models.User on table User
28 Feb 2015 16:47:07,491 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,492 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:47:07,495 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:47:07,496 DEBUG ~ Building property mainId
28 Feb 2015 16:47:07,496 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,497 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:47:07,498 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:47:07,505 DEBUG ~ Building property active_email
28 Feb 2015 16:47:07,505 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:47:07,506 DEBUG ~ MetadataSourceProcessor property email with lazy=false
28 Feb 2015 16:47:07,506 DEBUG ~ building SimpleValue for email
28 Feb 2015 16:47:07,507 DEBUG ~ Building property email
28 Feb 2015 16:47:07,515 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,516 DEBUG ~ MetadataSourceProcessor property password with lazy=false
28 Feb 2015 16:47:07,516 DEBUG ~ building SimpleValue for password
28 Feb 2015 16:47:07,517 DEBUG ~ Building property password
28 Feb 2015 16:47:07,517 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentAtFair, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,528 DEBUG ~ MetadataSourceProcessor property presentAtFair with lazy=false
28 Feb 2015 16:47:07,529 DEBUG ~ building SimpleValue for presentAtFair
28 Feb 2015 16:47:07,529 DEBUG ~ Building property presentAtFair
28 Feb 2015 16:47:07,529 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentFriday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,530 DEBUG ~ MetadataSourceProcessor property presentFriday with lazy=false
28 Feb 2015 16:47:07,538 DEBUG ~ building SimpleValue for presentFriday
28 Feb 2015 16:47:07,538 DEBUG ~ Building property presentFriday
28 Feb 2015 16:47:07,539 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentMonday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,540 DEBUG ~ MetadataSourceProcessor property presentMonday with lazy=false
28 Feb 2015 16:47:07,540 DEBUG ~ building SimpleValue for presentMonday
28 Feb 2015 16:47:07,551 DEBUG ~ Building property presentMonday
28 Feb 2015 16:47:07,551 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSaturday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,552 DEBUG ~ MetadataSourceProcessor property presentSaturday with lazy=false
28 Feb 2015 16:47:07,552 DEBUG ~ building SimpleValue for presentSaturday
28 Feb 2015 16:47:07,553 DEBUG ~ Building property presentSaturday
28 Feb 2015 16:47:07,563 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSunday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,563 DEBUG ~ MetadataSourceProcessor property presentSunday with lazy=false
28 Feb 2015 16:47:07,564 DEBUG ~ building SimpleValue for presentSunday
28 Feb 2015 16:47:07,564 DEBUG ~ Building property presentSunday
28 Feb 2015 16:47:07,565 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentThursday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,576 DEBUG ~ MetadataSourceProcessor property presentThursday with lazy=false
28 Feb 2015 16:47:07,576 DEBUG ~ building SimpleValue for presentThursday
28 Feb 2015 16:47:07,577 DEBUG ~ Building property presentThursday
28 Feb 2015 16:47:07,577 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentTuesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,585 DEBUG ~ MetadataSourceProcessor property presentTuesday with lazy=false
28 Feb 2015 16:47:07,586 DEBUG ~ building SimpleValue for presentTuesday
28 Feb 2015 16:47:07,586 DEBUG ~ Building property presentTuesday
28 Feb 2015 16:47:07,586 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentWednesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,587 DEBUG ~ MetadataSourceProcessor property presentWednesday with lazy=false
28 Feb 2015 16:47:07,596 DEBUG ~ building SimpleValue for presentWednesday
28 Feb 2015 16:47:07,597 DEBUG ~ Building property presentWednesday
28 Feb 2015 16:47:07,598 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:47:07,598 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,608 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=null, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,609 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=element, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,609 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts_KEY, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,609 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='xingContacts_KEY', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:47:07,620 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:47:07,636 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:47:07,636 DEBUG ~ Collection role: models.User.xingContacts
28 Feb 2015 16:47:07,637 DEBUG ~ Building property xingContacts
28 Feb 2015 16:47:07,637 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingId, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:47:07,648 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:47:07,648 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:47:07,648 DEBUG ~ Building property xingId
28 Feb 2015 16:47:07,649 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:47:07,649 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:47:07,649 DEBUG ~ Setting SimpleValue typeName for display_name
28 Feb 2015 16:47:07,657 DEBUG ~ Setting SimpleValue typeName for firstName
28 Feb 2015 16:47:07,657 DEBUG ~ Setting SimpleValue typeName for name
28 Feb 2015 16:47:07,658 DEBUG ~ Setting SimpleValue typeName for permalink
28 Feb 2015 16:47:07,658 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:47:07,658 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:47:07,668 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:47:07,668 DEBUG ~ Setting SimpleValue typeName for email
28 Feb 2015 16:47:07,669 DEBUG ~ Setting SimpleValue typeName for password
28 Feb 2015 16:47:07,669 DEBUG ~ Setting SimpleValue typeName for presentAtFair
28 Feb 2015 16:47:07,669 DEBUG ~ Setting SimpleValue typeName for presentFriday
28 Feb 2015 16:47:07,680 DEBUG ~ Setting SimpleValue typeName for presentMonday
28 Feb 2015 16:47:07,681 DEBUG ~ Setting SimpleValue typeName for presentSaturday
28 Feb 2015 16:47:07,681 DEBUG ~ Setting SimpleValue typeName for presentSunday
28 Feb 2015 16:47:07,681 DEBUG ~ Setting SimpleValue typeName for presentThursday
28 Feb 2015 16:47:07,682 DEBUG ~ Setting SimpleValue typeName for presentTuesday
28 Feb 2015 16:47:07,682 DEBUG ~ Setting SimpleValue typeName for presentWednesday
28 Feb 2015 16:47:07,682 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:47:07,683 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:47:07,683 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:07,683 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:07,684 DEBUG ~ Processing collection mappings
28 Feb 2015 16:47:07,685 DEBUG ~ Second pass for collection: models.User.xingContacts
28 Feb 2015 16:47:07,696 DEBUG ~ Binding a OneToMany: models.User.xingContacts through an association table
28 Feb 2015 16:47:07,697 DEBUG ~ Mapped collection key: User_id, element: xingContacts_id
28 Feb 2015 16:47:07,697 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:47:07,698 DEBUG ~ Processing association property references
28 Feb 2015 16:47:07,698 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:47:07,706 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:47:07,706 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:47:07,707 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:07,707 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:07,708 DEBUG ~ Automatic flush during beforeCompletion(): disabled
28 Feb 2015 16:47:07,716 DEBUG ~ Automatic session close at end of transaction: disabled
28 Feb 2015 16:47:07,716 DEBUG ~ JDBC batch size: 15
28 Feb 2015 16:47:07,716 DEBUG ~ JDBC batch updates for versioned data: disabled
28 Feb 2015 16:47:07,717 DEBUG ~ Scrollable result sets: enabled
28 Feb 2015 16:47:07,717 DEBUG ~ Wrap result sets: disabled
28 Feb 2015 16:47:07,717 DEBUG ~ JDBC3 getGeneratedKeys(): enabled
28 Feb 2015 16:47:07,717 DEBUG ~ multi-tenancy strategy : NONE
28 Feb 2015 16:47:07,727 DEBUG ~ Connection release mode: auto
28 Feb 2015 16:47:07,727 INFO  ~ HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
28 Feb 2015 16:47:07,728 DEBUG ~ Using BatchFetchStyle : LEGACY
28 Feb 2015 16:47:07,728 DEBUG ~ Maximum outer join fetch depth: 2
28 Feb 2015 16:47:07,728 DEBUG ~ Default batch fetch size: 1
28 Feb 2015 16:47:07,729 DEBUG ~ Generate SQL with comments: disabled
28 Feb 2015 16:47:07,735 DEBUG ~ Order SQL updates by primary key: disabled
28 Feb 2015 16:47:07,735 DEBUG ~ Order SQL inserts for batching: disabled
28 Feb 2015 16:47:07,736 DEBUG ~ Default null ordering: none
28 Feb 2015 16:47:07,736 DEBUG ~ Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
28 Feb 2015 16:47:07,737 INFO  ~ HHH000397: Using ASTQueryTranslatorFactory
28 Feb 2015 16:47:07,737 DEBUG ~ Query language substitutions: {}
28 Feb 2015 16:47:07,741 DEBUG ~ JPA-QL strict compliance: enabled
28 Feb 2015 16:47:07,741 DEBUG ~ Second-level cache: enabled
28 Feb 2015 16:47:07,741 DEBUG ~ Query cache: disabled
28 Feb 2015 16:47:07,742 DEBUG ~ Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
28 Feb 2015 16:47:07,742 DEBUG ~ org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
28 Feb 2015 16:47:07,746 DEBUG ~ Optimize cache for minimal puts: disabled
28 Feb 2015 16:47:07,747 DEBUG ~ Structured second-level cache entries: disabled
28 Feb 2015 16:47:07,747 DEBUG ~ Second-level cache direct-reference entries: disabled
28 Feb 2015 16:47:07,747 DEBUG ~ Statistics: disabled
28 Feb 2015 16:47:07,747 DEBUG ~ Deleted entity synthetic identifier rollback: disabled
28 Feb 2015 16:47:07,748 DEBUG ~ Default entity-mode: pojo
28 Feb 2015 16:47:07,751 DEBUG ~ Named query checking : enabled
28 Feb 2015 16:47:07,751 DEBUG ~ Check Nullability in Core (should be disabled when Bean Validation is on): enabled
28 Feb 2015 16:47:07,751 DEBUG ~ Allow initialization of lazy state outside session : : disabled
28 Feb 2015 16:47:07,752 DEBUG ~ JTA Track by Thread: enabled
28 Feb 2015 16:47:07,752 DEBUG ~ Building session factory
28 Feb 2015 16:47:07,753 DEBUG ~ Session factory constructed with filter configurations : {}
28 Feb 2015 16:47:07,755 DEBUG ~ Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, application.path=c:\ximeko, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, sun.nio.ch.bugLevel=, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_60\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_60\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_60-b19, hibernate.connection.autocommit=true, user.name=just, com.mchange.v2.log.MLog=com.mchange.v2.log.log4j.Log4jMLog, play.version=1.3.0, hibernate.connection.release_mode=auto, user.language=de, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_60\jre\bin, db.user=root, java.version=1.7.0_60, user.timezone=Europe/Berlin, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, javax.persistence.provider=org.hibernate.ejb.HibernatePersistence, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=DE, java.home=C:\Program Files\Java\jdk1.7.0_60\jre, java.vm.info=mixed mode, os.version=6.3, db.pass=test, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeo75971ly94ztyc68i3|4a83faf, dataSourceName -> 1hgeo75971ly94ztyc68i3|4a83faf ], hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=24.60-b09, db.destroyMethod=close, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\just, db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0, java.specification.vendor=Oracle Corporation, db.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Vagrant\bin;C:\Program Files\Java\jdk1.7.0_60\bin;C:\Program Files (x86)\Git\cmd;C:\play\play1-1.3.0;C:\Download\maven\apache-maven-3.0.5\bin;., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=play.db.jpa.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=play.server.Server , java.class.path=c:\ximeko\conf;C:\play\play1-1.3.0\framework\play-1.3.0.jar;c:\ximeko\lib\gson-2.3.1-javadoc.jar;c:\ximeko\lib\scribe-1.3.7.jar;C:\play\play1-1.3.0\modules\testrunner\lib\play-testrunner.jar;C:\play\play1-1.3.0\modules\docviewer\lib\play-docviewer.jar;C:\play\play1-1.3.0\framework\lib\activation-1.1.1.jar;C:\play\play1-1.3.0\framework\lib\antlr-2.7.7.jar;C:\play\play1-1.3.0\framework\lib\asm-all-5.0.3.jar;C:\play\play1-1.3.0\framework\lib\async-http-client-1.8.14.jar;C:\play\play1-1.3.0\framework\lib\bcprov-jdk15-1.45.jar;C:\play\play1-1.3.0\framework\lib\c3p0-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\c3p0-oracle-thin-extras-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\cglib-nodep-3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-beanutils-1.8.3.jar;C:\play\play1-1.3.0\framework\lib\commons-codec-1.8.jar;C:\play\play1-1.3.0\framework\lib\commons-collections-3.2.1.jar;C:\play\play1-1.3.0\framework\lib\commons-email-1.3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-fileupload-1.3.jar;C:\play\play1-1.3.0\framework\lib\commons-io-2.4.jar;C:\play\play1-1.3.0\framework\lib\commons-javaflow-1590792.jar;C:\play\play1-1.3.0\framework\lib\commons-lang-2.6.jar;C:\play\play1-1.3.0\framework\lib\commons-logging-1.1.3.jar;C:\play\play1-1.3.0\framework\lib\dom4j-1.6.1.jar;C:\play\play1-1.3.0\framework\lib\ehcache-core-2.6.9.jar;C:\play\play1-1.3.0\framework\lib\ezmorph-1.0.6.jar;C:\play\play1-1.3.0\framework\lib\geronimo-servlet_2.5_spec-1.2.jar;C:\play\play1-1.3.0\framework\lib\groovy-all-2.3.6.jar;C:\play\play1-1.3.0\framework\lib\gson-2.2.4.jar;C:\play\play1-1.3.0\framework\lib\h2-1.3.176.jar;C:\play\play1-1.3.0\framework\lib\hamcrest-core-1.3.jar;C:\play\play1-1.3.0\framework\lib\hibernate-c3p0-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-commons-annotations-4.0.2.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-core-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-entitymanager-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-validator-4.1.0.Final.jar;C:\play\play1-1.3.0\framework\lib\ivy-2.3.0.jar;C:\play\play1-1.3.0\framework\lib\jamon-2.75.jar;C:\play\play1-1.3.0\framework\lib\javassist-3.19.0-GA.jar;C:\play\play1-1.3.0\framework\lib\javax.inject-1.0.jar;C:\play\play1-1.3.0\framework\lib\jaxen-1.1.jar;C:\play\play1-1.3.0\framework\lib\jboss-logging-3.1.0.GA.jar;C:\play\play1-1.3.0\framework\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\jj-imaging.jar;C:\play\play1-1.3.0\framework\lib\jj-simplecaptcha.jar;C:\play\play1-1.3.0\framework\lib\jj-textile.jar;C:\play\play1-1.3.0\framework\lib\jj-wikitext.jar;C:\play\play1-1.3.0\framework\lib\joda-time-2.5.jar;C:\play\play1-1.3.0\framework\lib\jregex-1.2_01.jar;C:\play\play1-1.3.0\framework\lib\jsr107cache-1.0.jar;C:\play\play1-1.3.0\framework\lib\junit-4.11.jar;C:\play\play1-1.3.0\framework\lib\log4j-1.2.17.jar;C:\play\play1-1.3.0\framework\lib\mail-1.4.7.jar;C:\play\play1-1.3.0\framework\lib\mchange-commons-java-0.2.9.jar;C:\play\play1-1.3.0\framework\lib\mysql-connector-java-5.1.30.jar;C:\play\play1-1.3.0\framework\lib\netty-3.9.4.Final.jar;C:\play\play1-1.3.0\framework\lib\org.eclipse.jdt.core-3.10.0.v20140604-1726.jar;C:\play\play1-1.3.0\framework\lib\oval-1.84.jar;C:\play\play1-1.3.0\framework\lib\postgresql-9.0.jar;C:\play\play1-1.3.0\framework\lib\signpost-core-1.2.1.2.jar;C:\play\play1-1.3.0\framework\lib\slf4j-api-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\slf4j-log4j12-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\snakeyaml-1.13.jar;C:\play\play1-1.3.0\framework\lib\spymemcached-2.10.3.jar;C:\play\play1-1.3.0\framework\lib\validation-api-1.0.0.GA.jar;C:\play\play1-1.3.0\framework\lib\xmlpull-1.1.3.1.jar;C:\play\play1-1.3.0\framework\lib\xstream-1.4.7.jar;C:\play\play1-1.3.0\framework/play-1.3.0.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, sun.os.patch.level=, hibernate.connection.provider_class=org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl, java.io.tmpdir=C:\Users\just\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, play.id=test, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\ext;C:\windows\Sun\Java\lib\ext, user.dir=c:\ximeko, javax.persistence.transaction=RESOURCE_LOCAL, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, play.debug=yes, file.encoding=utf-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7}
28 Feb 2015 16:47:07,807 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:47:07,808 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:47:07,809 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:47:07,810 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:47:07,811 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:47:07,812 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:47:07,820 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.XingContact
28 Feb 2015 16:47:07,822 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.XingContact
28 Feb 2015 16:47:07,823 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.XingContact
28 Feb 2015 16:47:07,825 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.User
28 Feb 2015 16:47:07,826 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.User
28 Feb 2015 16:47:07,827 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.User
28 Feb 2015 16:47:07,827 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:07,828 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:07,857 DEBUG ~ Static SQL for entity: models.XingContact
28 Feb 2015 16:47:07,857 DEBUG ~  Version select: select id from XingContact where id =?
28 Feb 2015 16:47:07,858 DEBUG ~  Snapshot select: select xingcontac_.id, xingcontac_.active_email as active_e2_2_, xingcontac_.display_name as display_3_2_, xingcontac_.firstName as firstNam4_2_, xingcontac_.name as name5_2_, xingcontac_.permalink as permalin6_2_, xingcontac_.user_id as user_id8_2_, xingcontac_.xingId as xingId7_2_ from XingContact xingcontac_ where xingcontac_.id=?
28 Feb 2015 16:47:07,858 DEBUG ~  Insert 0: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:47:07,859 DEBUG ~  Update 0: update XingContact set active_email=?, display_name=?, firstName=?, name=?, permalink=?, user_id=?, xingId=? where id=?
28 Feb 2015 16:47:07,859 DEBUG ~  Delete 0: delete from XingContact where id=?
28 Feb 2015 16:47:07,860 DEBUG ~  Identity insert: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId) values (?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:47:07,870 DEBUG ~ Static SQL for entity: models.User
28 Feb 2015 16:47:07,870 DEBUG ~  Version select: select id from User where id =?
28 Feb 2015 16:47:07,871 DEBUG ~  Snapshot select: select user_.id, user_.active_email as active_e2_0_, user_.email as email3_0_, user_.password as password4_0_, user_.presentAtFair as presentA5_0_, user_.presentFriday as presentF6_0_, user_.presentMonday as presentM7_0_, user_.presentSaturday as presentS8_0_, user_.presentSunday as presentS9_0_, user_.presentThursday as present10_0_, user_.presentTuesday as present11_0_, user_.presentWednesday as present12_0_, user_.xingId as xingId13_0_ from User user_ where user_.id=?
28 Feb 2015 16:47:07,871 DEBUG ~  Insert 0: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:47:07,872 DEBUG ~  Update 0: update User set active_email=?, email=?, password=?, presentAtFair=?, presentFriday=?, presentMonday=?, presentSaturday=?, presentSunday=?, presentThursday=?, presentTuesday=?, presentWednesday=?, xingId=? where id=?
28 Feb 2015 16:47:07,873 DEBUG ~  Delete 0: delete from User where id=?
28 Feb 2015 16:47:07,873 DEBUG ~  Identity insert: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:47:07,873 DEBUG ~ Static SQL for collection: models.User.xingContacts
28 Feb 2015 16:47:07,874 DEBUG ~  Row insert: insert into User_XingContact (User_id, xingContacts_id) values (?, ?)
28 Feb 2015 16:47:07,874 DEBUG ~  Row update: update User_XingContact set xingContacts_id=? where User_id=? and xingContacts_id=?
28 Feb 2015 16:47:07,875 DEBUG ~  Row delete: delete from User_XingContact where User_id=? and xingContacts_id=?
28 Feb 2015 16:47:07,875 DEBUG ~  One-shot delete: delete from User_XingContact where User_id=?
28 Feb 2015 16:47:07,876 DEBUG ~ Static select for entity models.XingContact [NONE]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:47:07,877 DEBUG ~ Static select for entity models.XingContact [READ]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:47:07,880 DEBUG ~ Static select for entity models.XingContact [UPGRADE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:47:07,880 DEBUG ~ Static select for entity models.XingContact [UPGRADE_NOWAIT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:47:07,885 DEBUG ~ Static select for entity models.XingContact [FORCE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:47:07,889 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_READ]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? lock in share mode
28 Feb 2015 16:47:07,890 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_WRITE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:47:07,900 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:47:07,901 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:47:07,904 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:47:07,909 DEBUG ~ Static select for action ACTION_MERGE on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:47:07,909 DEBUG ~ Static select for action ACTION_REFRESH on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:47:07,914 DEBUG ~ Static select for entity models.User [NONE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,918 DEBUG ~ Static select for entity models.User [READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,919 DEBUG ~ Static select for entity models.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:47:07,925 DEBUG ~ Static select for entity models.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:47:07,949 DEBUG ~ Static select for entity models.User [FORCE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:47:07,950 DEBUG ~ Static select for entity models.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? lock in share mode
28 Feb 2015 16:47:07,951 DEBUG ~ Static select for entity models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:47:07,952 DEBUG ~ Static select for entity models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:47:07,953 DEBUG ~ Static select for entity models.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,958 DEBUG ~ Static select for entity models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,959 DEBUG ~ Static select for action ACTION_MERGE on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,960 DEBUG ~ Static select for action ACTION_REFRESH on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:47:07,961 DEBUG ~ Static select for collection models.User.xingContacts: select xingcontac0_.User_id as User_id1_0_2_, xingcontac0_.xingContacts_id as xingCont2_1_2_, xingcontac1_.id as id1_2_0_, xingcontac1_.active_email as active_e2_2_0_, xingcontac1_.display_name as display_3_2_0_, xingcontac1_.firstName as firstNam4_2_0_, xingcontac1_.name as name5_2_0_, xingcontac1_.permalink as permalin6_2_0_, xingcontac1_.user_id as user_id8_2_0_, xingcontac1_.xingId as xingId7_2_0_, user2_.id as id1_0_1_, user2_.active_email as active_e2_0_1_, user2_.email as email3_0_1_, user2_.password as password4_0_1_, user2_.presentAtFair as presentA5_0_1_, user2_.presentFriday as presentF6_0_1_, user2_.presentMonday as presentM7_0_1_, user2_.presentSaturday as presentS8_0_1_, user2_.presentSunday as presentS9_0_1_, user2_.presentThursday as present10_0_1_, user2_.presentTuesday as present11_0_1_, user2_.presentWednesday as present12_0_1_, user2_.xingId as xingId13_0_1_ from User_XingContact xingcontac0_ inner join XingContact xingcontac1_ on xingcontac0_.xingContacts_id=xingcontac1_.id left outer join User user2_ on xingcontac1_.user_id=user2_.id where xingcontac0_.User_id=?
28 Feb 2015 16:47:07,967 DEBUG ~ Registering SessionFactory: 82b604f4-bf59-4cf3-8d68-0076322845e0 (<unnamed>)
28 Feb 2015 16:47:07,967 DEBUG ~ Not binding SessionFactory to JNDI, no JNDI name configured
28 Feb 2015 16:47:07,967 DEBUG ~ Instantiated session factory
28 Feb 2015 16:47:07,970 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:47:07,970 DEBUG ~ Process annotated classes
28 Feb 2015 16:47:07,970 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:47:07,971 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:07,974 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:07,975 DEBUG ~ Processing collection mappings
28 Feb 2015 16:47:07,998 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:47:07,999 DEBUG ~ Processing association property references
28 Feb 2015 16:47:07,999 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:47:08,000 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:47:08,000 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:47:08,000 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:08,001 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:08,001 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,001 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,002 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:47:08,002 DEBUG ~ Process annotated classes
28 Feb 2015 16:47:08,002 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:47:08,003 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:08,003 DEBUG ~ Processing extends queue
28 Feb 2015 16:47:08,003 DEBUG ~ Processing collection mappings
28 Feb 2015 16:47:08,003 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:47:08,003 DEBUG ~ Processing association property references
28 Feb 2015 16:47:08,004 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:47:08,004 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:47:08,004 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:47:08,005 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:08,005 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:47:08,005 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,006 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,007 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,007 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:47:08,008 INFO  ~ HHH000227: Running hbm2ddl schema export
28 Feb 2015 16:47:08,008 DEBUG ~ Import file not found: /import.sql
28 Feb 2015 16:47:08,036 ERROR ~ HHH000389: Unsuccessful: alter table XingContact drop foreign key FK_jf4260qdc0mn29ne235dcsjj5
28 Feb 2015 16:47:08,036 ERROR ~ Can't DROP 'FK_jf4260qdc0mn29ne235dcsjj5'; check that column/key exists
28 Feb 2015 16:47:08,589 INFO  ~ HHH000230: Schema export complete
28 Feb 2015 16:47:08,589 DEBUG ~ Checking 0 named HQL queries
28 Feb 2015 16:47:08,589 DEBUG ~ Checking 0 named SQL queries
28 Feb 2015 16:47:08,590 DEBUG ~ Statistics initialized [enabled=false]
28 Feb 2015 16:47:08,595 DEBUG ~ Registering EntityManagerFactory: 012761ec-0016-40a9-a3bf-5b35d24e1ee6 
28 Feb 2015 16:47:08,599 DEBUG ~ begin
28 Feb 2015 16:47:08,599 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:08,599 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:08,599 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:08,600 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:08,712 DEBUG ~ committing
28 Feb 2015 16:47:08,713 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:08,713 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:08,714 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:08,714 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:10,859 DEBUG ~ begin
28 Feb 2015 16:47:10,860 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:10,860 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:10,860 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:10,861 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:10,867 DEBUG ~ committing
28 Feb 2015 16:47:10,867 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:10,868 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:10,868 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:10,868 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:10,890 DEBUG ~ begin
28 Feb 2015 16:47:10,890 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:10,890 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:10,890 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:10,891 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:10,895 DEBUG ~ suspend()
28 Feb 2015 16:47:10,899 DEBUG ~ push object java.lang.String@494964969/unknown [PrototypeUserTest.class] i[0],l[0],d[0],f[0],o[0],r[0]
28 Feb 2015 16:47:10,900 DEBUG ~ push object java.lang.String@-1859301857/unknown [PrototypeUserTest] i[0],l[0],d[0],f[0],o[1],r[0]
28 Feb 2015 16:47:10,900 DEBUG ~ push int 27 i[0],l[0],d[0],f[0],o[2],r[0]
28 Feb 2015 16:47:10,902 DEBUG ~ committing
28 Feb 2015 16:47:10,903 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:10,904 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:10,904 DEBUG ~ begin
28 Feb 2015 16:47:10,905 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:10,905 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:10,905 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:10,906 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:10,906 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:10,906 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:11,079 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:47:11,096 DEBUG ~ Natively generated identity: 1
28 Feb 2015 16:47:11,102 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,104 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,109 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [<unreferenced>] (initialized)
28 Feb 2015 16:47:11,111 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:11,111 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:11,113 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,115 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,116 DEBUG ~ Inserting collection: [models.User.xingContacts#1]
28 Feb 2015 16:47:11,116 DEBUG ~ Collection was empty
28 Feb 2015 16:47:11,119 DEBUG ~ parse() - HQL: from models.User where email = ?1
28 Feb 2015 16:47:11,121 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'email'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

28 Feb 2015 16:47:11,122 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:11,123 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:47:11,124 DEBUG ~ FromClause{level=1} : models.User (<no alias>) -> user0_
28 Feb 2015 16:47:11,124 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:47:11,125 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:47:11,126 DEBUG ~ Resolved : {synthetic-alias}.email -> user0_.email
28 Feb 2015 16:47:11,126 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:47:11,126 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( = ( user0_.email {synthetic-alias} email ) ? ) ) )
28 Feb 2015 16:47:11,127 DEBUG ~ Derived SELECT clause created.
28 Feb 2015 16:47:11,127 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:47:11,128 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:47:11,129 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@a60e57e}

28 Feb 2015 16:47:11,131 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:11,131 DEBUG ~ HQL: from models.User where email = ?1
28 Feb 2015 16:47:11,132 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_ where user0_.email=?
28 Feb 2015 16:47:11,133 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:11,133 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,137 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,137 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,138 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:11,138 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:11,139 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,139 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,146 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:11,149 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:11,150 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:47:11,152 DEBUG ~ Natively generated identity: 2
28 Feb 2015 16:47:11,154 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,154 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,155 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,155 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [<unreferenced>] (initialized)
28 Feb 2015 16:47:11,156 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
28 Feb 2015 16:47:11,156 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
28 Feb 2015 16:47:11,156 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,157 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,157 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,159 DEBUG ~ Inserting collection: [models.User.xingContacts#2]
28 Feb 2015 16:47:11,159 DEBUG ~ Collection was empty
28 Feb 2015 16:47:11,160 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,160 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,162 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,162 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,164 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
28 Feb 2015 16:47:11,164 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
28 Feb 2015 16:47:11,165 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,167 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,168 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,172 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:11,173 DEBUG ~ Result row: EntityKey[models.User#2]
28 Feb 2015 16:47:11,174 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:47:11,176 DEBUG ~ Natively generated identity: 3
28 Feb 2015 16:47:11,177 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,178 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,178 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,179 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,179 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [<unreferenced>] (initialized)
28 Feb 2015 16:47:11,180 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
28 Feb 2015 16:47:11,180 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 3 collections
28 Feb 2015 16:47:11,180 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,181 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:11,181 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,185 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,185 DEBUG ~ Inserting collection: [models.User.xingContacts#3]
28 Feb 2015 16:47:11,187 DEBUG ~ Collection was empty
28 Feb 2015 16:47:11,190 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,190 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,190 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,191 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,191 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:47:11,194 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
28 Feb 2015 16:47:11,194 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
28 Feb 2015 16:47:11,194 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,194 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:11,198 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,198 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,204 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:11,205 DEBUG ~ Result row: EntityKey[models.User#3]
28 Feb 2015 16:47:11,206 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:47:11,208 DEBUG ~ Natively generated identity: 4
28 Feb 2015 16:47:11,210 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,211 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,212 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,212 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,213 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:47:11,214 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [<unreferenced>] (initialized)
28 Feb 2015 16:47:11,215 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:47:11,215 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:47:11,216 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,216 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:47:11,217 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:11,217 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,221 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,222 DEBUG ~ Inserting collection: [models.User.xingContacts#4]
28 Feb 2015 16:47:11,222 DEBUG ~ Collection was empty
28 Feb 2015 16:47:11,226 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,227 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,227 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,228 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,228 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:47:11,230 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [models.User.xingContacts#4] (initialized)
28 Feb 2015 16:47:11,230 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:47:11,231 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:47:11,231 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,231 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:47:11,233 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:11,234 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,238 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,240 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:11,241 DEBUG ~ Result row: EntityKey[models.User#4]
28 Feb 2015 16:47:11,243 DEBUG ~ committing
28 Feb 2015 16:47:11,243 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:11,244 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:11,244 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:11,244 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:47:11,245 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:47:11,246 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [models.User.xingContacts#4] (initialized)
28 Feb 2015 16:47:11,246 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:47:11,247 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:47:11,247 DEBUG ~ Listing entities:
28 Feb 2015 16:47:11,247 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:47:11,251 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:11,251 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:11,259 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:11,264 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:11,264 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:11,265 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:11,265 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:11,272 DEBUG ~ begin
28 Feb 2015 16:47:11,273 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:11,273 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:11,273 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:11,274 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:11,274 DEBUG ~ pop int 27 i[0],l[0],d[0],f[0],o[2],r[0]
28 Feb 2015 16:47:11,275 DEBUG ~ pop object java.lang.String@-1859301857/unknown [PrototypeUserTest] 
28 Feb 2015 16:47:11,275 DEBUG ~ pop object java.lang.String@494964969/unknown [PrototypeUserTest.class] 
28 Feb 2015 16:47:11,343 DEBUG ~ committing
28 Feb 2015 16:47:11,344 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:11,344 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:11,345 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:11,345 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:11,382 DEBUG ~ begin
28 Feb 2015 16:47:11,382 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:11,383 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:11,383 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:11,383 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:11,386 DEBUG ~ committing
28 Feb 2015 16:47:11,386 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:11,387 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:11,387 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:11,387 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:26,814 DEBUG ~ begin
28 Feb 2015 16:47:26,814 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:26,815 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:26,815 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:26,815 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:26,859 DEBUG ~ committing
28 Feb 2015 16:47:26,859 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:26,861 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:26,861 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:26,861 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:30,456 DEBUG ~ begin
28 Feb 2015 16:47:30,456 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:30,457 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:30,457 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:30,457 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:30,459 DEBUG ~ parse() - HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:47:30,462 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

28 Feb 2015 16:47:30,463 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,463 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:47:30,464 DEBUG ~ FromClause{level=1} : models.User (<no alias>) -> user0_
28 Feb 2015 16:47:30,465 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:47:30,465 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:47:30,466 DEBUG ~ Resolved : {synthetic-alias}.email -> user0_.email
28 Feb 2015 16:47:30,467 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:47:30,468 DEBUG ~ getDataType() : password -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:47:30,468 DEBUG ~ Resolved : {synthetic-alias}.password -> user0_.password
28 Feb 2015 16:47:30,469 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:47:30,469 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( AND ( = ( user0_.email {synthetic-alias} email ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
28 Feb 2015 16:47:30,470 DEBUG ~ Derived SELECT clause created.
28 Feb 2015 16:47:30,470 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:47:30,471 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:47:30,472 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@a60e57e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=ALL,propertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=models.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@a60e57e}

28 Feb 2015 16:47:30,519 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,519 DEBUG ~ HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:47:30,520 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_ where user0_.email=? and user0_.password=?
28 Feb 2015 16:47:30,530 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,532 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:30,534 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:30,547 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:47:30,549 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:47:30,557 DEBUG ~ committing
28 Feb 2015 16:47:30,557 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:30,558 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:30,558 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:30,559 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:30,560 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:30,560 DEBUG ~ Listing entities:
28 Feb 2015 16:47:30,560 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:30,568 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:30,569 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:30,569 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:30,570 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:30,606 DEBUG ~ begin
28 Feb 2015 16:47:30,606 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:30,606 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:30,607 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:30,607 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:30,609 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:30,610 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:30,611 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:47:30,611 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:47:30,612 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:30,613 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:30,613 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:30,614 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:30,614 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:30,614 DEBUG ~ Listing entities:
28 Feb 2015 16:47:30,615 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:30,616 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:30,617 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:30,621 DEBUG ~ Loading collection: [models.User.xingContacts#1]
28 Feb 2015 16:47:30,624 DEBUG ~ Result set contains (possibly empty) collection: [models.User.xingContacts#1]
28 Feb 2015 16:47:30,628 DEBUG ~ 1 collections were found in result set for role: models.User.xingContacts
28 Feb 2015 16:47:30,628 DEBUG ~ Collection fully initialized: [models.User.xingContacts#1]
28 Feb 2015 16:47:30,629 DEBUG ~ 1 collections initialized for role: models.User.xingContacts
28 Feb 2015 16:47:30,630 DEBUG ~ Done loading collection
28 Feb 2015 16:47:30,631 DEBUG ~ parse() - HQL: select e from models.User e
28 Feb 2015 16:47:30,633 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'e'

28 Feb 2015 16:47:30,634 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,635 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:47:30,635 DEBUG ~ FromClause{level=1} : models.User (e) -> user0_
28 Feb 2015 16:47:30,636 DEBUG ~ Resolved : e -> user0_.id
28 Feb 2015 16:47:30,637 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:47:30,639 DEBUG ~ processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} User user0_ ) )
28 Feb 2015 16:47:30,640 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:47:30,640 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:47:30,641 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=e, className=models.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}

28 Feb 2015 16:47:30,666 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,667 DEBUG ~ HQL: select e from models.User e
28 Feb 2015 16:47:30,667 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_
28 Feb 2015 16:47:30,683 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:47:30,684 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:30,684 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:30,697 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:30,697 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:30,698 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:30,698 DEBUG ~ Listing entities:
28 Feb 2015 16:47:30,698 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:30,707 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:30,709 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:30,709 DEBUG ~ Result set row: 1
28 Feb 2015 16:47:30,709 DEBUG ~ Result row: EntityKey[models.User#2]
28 Feb 2015 16:47:30,710 DEBUG ~ Result set row: 2
28 Feb 2015 16:47:30,710 DEBUG ~ Result row: EntityKey[models.User#3]
28 Feb 2015 16:47:30,711 DEBUG ~ Result set row: 3
28 Feb 2015 16:47:30,712 DEBUG ~ Result row: EntityKey[models.User#4]
28 Feb 2015 16:47:30,716 DEBUG ~ Resolving associations for [models.User#2]
28 Feb 2015 16:47:30,717 DEBUG ~ Done materializing entity [models.User#2]
28 Feb 2015 16:47:30,717 DEBUG ~ Resolving associations for [models.User#3]
28 Feb 2015 16:47:30,718 DEBUG ~ Done materializing entity [models.User#3]
28 Feb 2015 16:47:30,718 DEBUG ~ Resolving associations for [models.User#4]
28 Feb 2015 16:47:30,718 DEBUG ~ Done materializing entity [models.User#4]
28 Feb 2015 16:47:30,903 DEBUG ~ committing
28 Feb 2015 16:47:30,904 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:30,905 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:30,910 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:47:30,910 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (uninitialized)
28 Feb 2015 16:47:30,911 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (uninitialized)
28 Feb 2015 16:47:30,911 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [models.User.xingContacts#4] (uninitialized)
28 Feb 2015 16:47:30,912 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:47:30,912 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:47:30,912 DEBUG ~ Listing entities:
28 Feb 2015 16:47:30,913 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:47:30,913 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:47:30,914 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:47:30,914 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:30,915 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:30,915 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:30,916 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:30,916 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:33,449 DEBUG ~ begin
28 Feb 2015 16:47:33,450 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:33,450 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:33,450 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:33,450 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:33,453 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:33,454 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:33,455 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:47:33,455 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:47:33,457 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:33,458 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:33,458 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:33,458 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:33,459 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:33,459 DEBUG ~ Listing entities:
28 Feb 2015 16:47:33,459 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:33,461 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:33,462 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:34,067 DEBUG ~ committing
28 Feb 2015 16:47:34,068 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:34,068 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:34,069 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:34,070 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:34,071 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:34,072 DEBUG ~ Listing entities:
28 Feb 2015 16:47:34,072 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:34,073 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:34,073 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:34,074 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:34,074 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:34,101 DEBUG ~ begin
28 Feb 2015 16:47:34,101 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:34,102 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:34,102 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:34,102 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:34,104 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:34,105 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:34,106 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:47:34,106 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:47:34,107 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:34,108 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:34,108 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:34,108 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:34,109 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:34,109 DEBUG ~ Listing entities:
28 Feb 2015 16:47:34,109 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:34,111 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:34,112 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:34,176 DEBUG ~ committing
28 Feb 2015 16:47:34,176 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:34,177 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:34,177 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:34,178 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:34,178 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:34,179 DEBUG ~ Listing entities:
28 Feb 2015 16:47:34,179 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:34,181 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:47:34,181 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:34,182 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:34,183 DEBUG ~ Released JDBC connection
28 Feb 2015 16:47:59,734 DEBUG ~ begin
28 Feb 2015 16:47:59,735 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:47:59,736 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:47:59,736 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:47:59,736 DEBUG ~ disabling autocommit
28 Feb 2015 16:47:59,738 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:59,739 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:59,740 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:47:59,740 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:47:59,742 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:47:59,742 DEBUG ~ Dirty checking collections
28 Feb 2015 16:47:59,742 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:47:59,743 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:47:59,743 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:47:59,744 DEBUG ~ Listing entities:
28 Feb 2015 16:47:59,744 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:47:59,746 DEBUG ~ Result set row: 0
28 Feb 2015 16:47:59,747 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:47:59,750 DEBUG ~ rolling back
28 Feb 2015 16:47:59,750 DEBUG ~ rolled JDBC Connection
28 Feb 2015 16:47:59,750 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:47:59,751 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:47:59,751 DEBUG ~ Released JDBC connection
28 Feb 2015 16:48:00,085 ERROR ~ 

@6lb96g135
Internal Server Error (500) for request GET /contactsview/verifier?oauth_token=b6f0463fe21e37b87386&xing_error=user_abort

Execution exception (In /app/controllers/ContactsView.java around line 109)
NullPointerException occured : null

play.exceptions.JavaExecutionException
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:228)
	at Invocation.HTTP Request(Play!)
Caused by: java.lang.NullPointerException
	at controllers.ContactsView.verifier(ContactsView.java:109)
	at play.mvc.ActionInvoker.invokeWithContinuation(ActionInvoker.java:524)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:475)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:451)
	at play.mvc.ActionInvoker.invokeControllerMethod(ActionInvoker.java:446)
	at play.mvc.ActionInvoker.invoke(ActionInvoker.java:160)
	... 1 more
28 Feb 2015 16:49:00,861 DEBUG ~ begin
28 Feb 2015 16:49:00,862 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:49:00,862 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:49:00,862 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:49:00,863 DEBUG ~ disabling autocommit
28 Feb 2015 16:49:00,868 DEBUG ~ Result set row: 0
28 Feb 2015 16:49:00,871 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:49:00,872 DEBUG ~ Resolving associations for [models.User#1]
28 Feb 2015 16:49:00,872 DEBUG ~ Done materializing entity [models.User#1]
28 Feb 2015 16:49:00,874 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:49:00,875 DEBUG ~ Dirty checking collections
28 Feb 2015 16:49:00,876 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:49:00,876 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:49:00,877 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:49:00,877 DEBUG ~ Listing entities:
28 Feb 2015 16:49:00,878 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:49:00,879 DEBUG ~ Result set row: 0
28 Feb 2015 16:49:00,880 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:49:00,885 DEBUG ~ committing
28 Feb 2015 16:49:00,886 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:49:00,886 DEBUG ~ Dirty checking collections
28 Feb 2015 16:49:00,886 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (uninitialized)
28 Feb 2015 16:49:00,887 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:49:00,887 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:49:00,887 DEBUG ~ Listing entities:
28 Feb 2015 16:49:00,888 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=<uninitialized>, presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:49:00,889 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:49:00,889 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:49:00,890 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:49:00,890 DEBUG ~ Released JDBC connection
28 Feb 2015 16:52:22,920 DEBUG ~ HHH000031: Closing
28 Feb 2015 16:52:22,921 DEBUG ~ Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
28 Feb 2015 16:52:22,922 DEBUG ~ Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
28 Feb 2015 16:52:22,922 DEBUG ~ Remove: name=012761ec-0016-40a9-a3bf-5b35d24e1ee6
28 Feb 2015 16:52:23,024 DEBUG ~ Configuring ehcache from ehcache.xml found in the classpath: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:52:23,024 DEBUG ~ Configuring ehcache from URL: jar:file:/C:/play/play1-1.3.0/framework/play-1.3.0.jar!/ehcache.xml
28 Feb 2015 16:52:23,025 DEBUG ~ Configuring ehcache from InputStream
28 Feb 2015 16:52:23,029 DEBUG ~ Ignoring ehcache attribute xmlns:xsi
28 Feb 2015 16:52:23,029 DEBUG ~ Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
28 Feb 2015 16:52:23,031 DEBUG ~ Creating new CacheManager with default config
28 Feb 2015 16:52:23,032 DEBUG ~ propertiesString is null.
28 Feb 2015 16:52:23,033 DEBUG ~ No CacheManagerEventListenerFactory class specified. Skipping...
28 Feb 2015 16:52:23,034 DEBUG ~ No BootstrapCacheLoaderFactory class specified. Skipping...
28 Feb 2015 16:52:23,035 DEBUG ~ CacheWriter factory not configured. Skipping...
28 Feb 2015 16:52:23,036 DEBUG ~ No CacheExceptionHandlerFactory class specified. Skipping...
28 Feb 2015 16:52:23,038 DEBUG ~ Initialized net.sf.ehcache.store.NotifyingMemoryStore for play
28 Feb 2015 16:52:23,039 DEBUG ~ Initialised cache: play
28 Feb 2015 16:52:23,039 DEBUG ~ CacheDecoratorFactory not configured for defaultCache. Skipping for 'play'.
28 Feb 2015 16:52:23,042 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:52:23,043 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:52:23,043 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@444009a4
28 Feb 2015 16:52:23,044 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3524a319
28 Feb 2015 16:52:23,044 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@20fb52cd
28 Feb 2015 16:52:23,045 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@2ce2006c
28 Feb 2015 16:52:23,045 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:52:23,046 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:52:23,046 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a05423d
28 Feb 2015 16:52:23,047 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:52:23,047 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:52:23,048 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@128e8aa9
28 Feb 2015 16:52:23,049 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:52:23,049 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:52:23,049 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a55c2e2
28 Feb 2015 16:52:23,050 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:52:23,058 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:52:23,059 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@315a11d2
28 Feb 2015 16:52:23,059 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:52:23,060 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:52:23,060 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@187f2ac8
28 Feb 2015 16:52:23,068 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:52:23,069 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:52:23,069 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7be07643
28 Feb 2015 16:52:23,070 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:52:23,070 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:52:23,078 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@505c9fe0
28 Feb 2015 16:52:23,078 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:52:23,079 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@727a31d8
28 Feb 2015 16:52:23,079 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:52:23,080 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2faee385
28 Feb 2015 16:52:23,082 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:52:23,082 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:52:23,083 DEBUG ~ Adding type registration nstring -> org.hibernate.type.StringNVarcharType@312cd9dc
28 Feb 2015 16:52:23,083 DEBUG ~ Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f0ec102
28 Feb 2015 16:52:23,084 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:52:23,092 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@4822220b
28 Feb 2015 16:52:23,092 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:52:23,093 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b5bed1a
28 Feb 2015 16:52:23,093 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:52:23,094 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78b3e62a
28 Feb 2015 16:52:23,098 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:52:23,098 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:52:23,099 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15602819
28 Feb 2015 16:52:23,099 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@126680a
28 Feb 2015 16:52:23,099 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:52:23,108 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:52:23,108 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b64d4e8
28 Feb 2015 16:52:23,109 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4656b3b1
28 Feb 2015 16:52:23,109 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:52:23,109 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c67d2fc
28 Feb 2015 16:52:23,122 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:52:23,123 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6915d3a8
28 Feb 2015 16:52:23,123 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:52:23,123 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12b730b9
28 Feb 2015 16:52:23,124 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:52:23,132 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37ca1774
28 Feb 2015 16:52:23,132 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:52:23,133 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5aca14d
28 Feb 2015 16:52:23,133 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eaee30f
28 Feb 2015 16:52:23,133 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fa0939
28 Feb 2015 16:52:23,142 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:52:23,143 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:52:23,143 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@6ee352f6
28 Feb 2015 16:52:23,143 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:52:23,144 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:52:23,155 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4416fa7a
28 Feb 2015 16:52:23,156 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@68cbb203
28 Feb 2015 16:52:23,156 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:52:23,156 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:52:23,157 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@52f1234c
28 Feb 2015 16:52:23,170 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:52:23,170 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:52:23,171 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22afc0c9
28 Feb 2015 16:52:23,171 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@7aea68c0
28 Feb 2015 16:52:23,171 DEBUG ~ Adding type registration ntext -> org.hibernate.type.NTextType@3d39f2c8
28 Feb 2015 16:52:23,179 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:52:23,180 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59eb2200
28 Feb 2015 16:52:23,180 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a56d026
28 Feb 2015 16:52:23,182 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:52:23,183 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9ae8ede
28 Feb 2015 16:52:23,190 DEBUG ~ Adding type registration nclob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:52:23,191 DEBUG ~ Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a310caf
28 Feb 2015 16:52:23,191 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3475ebe8
28 Feb 2015 16:52:23,192 DEBUG ~ Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59f0780c
28 Feb 2015 16:52:23,192 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@74427903
28 Feb 2015 16:52:23,207 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:52:23,207 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44bbf788
28 Feb 2015 16:52:23,208 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@420bc237
28 Feb 2015 16:52:23,208 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11fbcac1
28 Feb 2015 16:52:23,208 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@29bc4e20
28 Feb 2015 16:52:23,217 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9ad2c48
28 Feb 2015 16:52:23,217 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48362fee
28 Feb 2015 16:52:23,217 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d84d74b
28 Feb 2015 16:52:23,218 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c52ace4
28 Feb 2015 16:52:23,218 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57d4cbac
28 Feb 2015 16:52:23,227 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
28 Feb 2015 16:52:23,227 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
28 Feb 2015 16:52:23,227 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:52:23,228 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
28 Feb 2015 16:52:23,228 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
28 Feb 2015 16:52:23,236 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
28 Feb 2015 16:52:23,237 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
28 Feb 2015 16:52:23,237 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
28 Feb 2015 16:52:23,237 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
28 Feb 2015 16:52:23,238 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
28 Feb 2015 16:52:23,249 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
28 Feb 2015 16:52:23,249 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
28 Feb 2015 16:52:23,250 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
28 Feb 2015 16:52:23,259 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
28 Feb 2015 16:52:23,259 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
28 Feb 2015 16:52:23,262 DEBUG ~ Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
28 Feb 2015 16:52:23,274 DEBUG ~ Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
28 Feb 2015 16:52:23,275 DEBUG ~ No JNDI name configured for binding Ejb3Configuration
28 Feb 2015 16:52:23,275 DEBUG ~ Preparing to build session factory with filters : {}
28 Feb 2015 16:52:23,276 INFO  ~ HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
28 Feb 2015 16:52:23,277 DEBUG ~ Database ->
       name : MySQL
    version : 5.6.21
      major : 5
      minor : 6
28 Feb 2015 16:52:23,284 DEBUG ~ Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.30 ( Revision: alexander.soklakov@oracle.com-20140310090514-8xt1yoht5ksg2e7c )
      major : 5
      minor : 1
28 Feb 2015 16:52:23,285 DEBUG ~ JDBC version : 4.0
28 Feb 2015 16:52:23,299 INFO  ~ HHH000400: Using dialect: play.db.jpa.MySQLDialect
28 Feb 2015 16:52:23,301 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:52:23,301 DEBUG ~ Process annotated classes
28 Feb 2015 16:52:23,302 DEBUG ~ Binding entity from annotated class: models.XingContact
28 Feb 2015 16:52:23,302 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:52:23,303 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:52:23,307 DEBUG ~ Import with entity name XingContact
28 Feb 2015 16:52:23,307 DEBUG ~ Bind entity models.XingContact on table XingContact
28 Feb 2015 16:52:23,313 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,314 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:52:23,314 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:52:23,315 DEBUG ~ Building property mainId
28 Feb 2015 16:52:23,315 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,316 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:52:23,316 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:52:23,316 DEBUG ~ Building property active_email
28 Feb 2015 16:52:23,328 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=display_name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,328 DEBUG ~ MetadataSourceProcessor property display_name with lazy=false
28 Feb 2015 16:52:23,328 DEBUG ~ building SimpleValue for display_name
28 Feb 2015 16:52:23,328 DEBUG ~ Building property display_name
28 Feb 2015 16:52:23,329 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,338 DEBUG ~ MetadataSourceProcessor property firstName with lazy=false
28 Feb 2015 16:52:23,339 DEBUG ~ building SimpleValue for firstName
28 Feb 2015 16:52:23,339 DEBUG ~ Building property firstName
28 Feb 2015 16:52:23,339 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=name, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,339 DEBUG ~ MetadataSourceProcessor property name with lazy=false
28 Feb 2015 16:52:23,356 DEBUG ~ building SimpleValue for name
28 Feb 2015 16:52:23,357 DEBUG ~ Building property name
28 Feb 2015 16:52:23,357 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=permalink, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,357 DEBUG ~ MetadataSourceProcessor property permalink with lazy=false
28 Feb 2015 16:52:23,358 DEBUG ~ building SimpleValue for permalink
28 Feb 2015 16:52:23,366 DEBUG ~ Building property permalink
28 Feb 2015 16:52:23,366 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:52:23,367 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=user, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,367 DEBUG ~ Building property user
28 Feb 2015 16:52:23,368 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(XingContact), mappingColumn=xingId, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:52:23,376 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:52:23,376 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:52:23,377 DEBUG ~ Building property xingId
28 Feb 2015 16:52:23,377 DEBUG ~ Binding entity from annotated class: models.User
28 Feb 2015 16:52:23,377 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
28 Feb 2015 16:52:23,378 DEBUG ~ No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
28 Feb 2015 16:52:23,386 DEBUG ~ Import with entity name User
28 Feb 2015 16:52:23,386 DEBUG ~ Bind entity models.User on table User
28 Feb 2015 16:52:23,390 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,391 DEBUG ~ MetadataSourceProcessor property mainId with lazy=false
28 Feb 2015 16:52:23,391 DEBUG ~ building SimpleValue for mainId
28 Feb 2015 16:52:23,396 DEBUG ~ Building property mainId
28 Feb 2015 16:52:23,397 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=active_email, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,399 DEBUG ~ MetadataSourceProcessor property active_email with lazy=false
28 Feb 2015 16:52:23,400 DEBUG ~ building SimpleValue for active_email
28 Feb 2015 16:52:23,401 DEBUG ~ Building property active_email
28 Feb 2015 16:52:23,410 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=email, insertable=true, updatable=true, unique=true}
28 Feb 2015 16:52:23,411 DEBUG ~ MetadataSourceProcessor property email with lazy=false
28 Feb 2015 16:52:23,412 DEBUG ~ building SimpleValue for email
28 Feb 2015 16:52:23,413 DEBUG ~ Building property email
28 Feb 2015 16:52:23,414 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,424 DEBUG ~ MetadataSourceProcessor property password with lazy=false
28 Feb 2015 16:52:23,425 DEBUG ~ building SimpleValue for password
28 Feb 2015 16:52:23,427 DEBUG ~ Building property password
28 Feb 2015 16:52:23,427 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentAtFair, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,428 DEBUG ~ MetadataSourceProcessor property presentAtFair with lazy=false
28 Feb 2015 16:52:23,434 DEBUG ~ building SimpleValue for presentAtFair
28 Feb 2015 16:52:23,435 DEBUG ~ Building property presentAtFair
28 Feb 2015 16:52:23,436 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentFriday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,438 DEBUG ~ MetadataSourceProcessor property presentFriday with lazy=false
28 Feb 2015 16:52:23,439 DEBUG ~ building SimpleValue for presentFriday
28 Feb 2015 16:52:23,445 DEBUG ~ Building property presentFriday
28 Feb 2015 16:52:23,446 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentMonday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,447 DEBUG ~ MetadataSourceProcessor property presentMonday with lazy=false
28 Feb 2015 16:52:23,448 DEBUG ~ building SimpleValue for presentMonday
28 Feb 2015 16:52:23,449 DEBUG ~ Building property presentMonday
28 Feb 2015 16:52:23,458 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSaturday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,460 DEBUG ~ MetadataSourceProcessor property presentSaturday with lazy=false
28 Feb 2015 16:52:23,461 DEBUG ~ building SimpleValue for presentSaturday
28 Feb 2015 16:52:23,462 DEBUG ~ Building property presentSaturday
28 Feb 2015 16:52:23,462 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentSunday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,472 DEBUG ~ MetadataSourceProcessor property presentSunday with lazy=false
28 Feb 2015 16:52:23,473 DEBUG ~ building SimpleValue for presentSunday
28 Feb 2015 16:52:23,475 DEBUG ~ Building property presentSunday
28 Feb 2015 16:52:23,476 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentThursday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,482 DEBUG ~ MetadataSourceProcessor property presentThursday with lazy=false
28 Feb 2015 16:52:23,483 DEBUG ~ building SimpleValue for presentThursday
28 Feb 2015 16:52:23,483 DEBUG ~ Building property presentThursday
28 Feb 2015 16:52:23,484 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentTuesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,484 DEBUG ~ MetadataSourceProcessor property presentTuesday with lazy=false
28 Feb 2015 16:52:23,492 DEBUG ~ building SimpleValue for presentTuesday
28 Feb 2015 16:52:23,493 DEBUG ~ Building property presentTuesday
28 Feb 2015 16:52:23,493 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=presentWednesday, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,494 DEBUG ~ MetadataSourceProcessor property presentWednesday with lazy=false
28 Feb 2015 16:52:23,494 DEBUG ~ building SimpleValue for presentWednesday
28 Feb 2015 16:52:23,505 DEBUG ~ Building property presentWednesday
28 Feb 2015 16:52:23,505 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:52:23,506 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,507 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=null, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,515 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=element, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,516 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingContacts_KEY, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,517 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='xingContacts_KEY', referencedColumn='null', mappedBy='null'}
28 Feb 2015 16:52:23,517 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:52:23,526 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
28 Feb 2015 16:52:23,527 DEBUG ~ Collection role: models.User.xingContacts
28 Feb 2015 16:52:23,527 DEBUG ~ Building property xingContacts
28 Feb 2015 16:52:23,528 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=xingId, insertable=true, updatable=true, unique=false}
28 Feb 2015 16:52:23,540 DEBUG ~ MetadataSourceProcessor property xingId with lazy=false
28 Feb 2015 16:52:23,541 DEBUG ~ building SimpleValue for xingId
28 Feb 2015 16:52:23,541 DEBUG ~ Building property xingId
28 Feb 2015 16:52:23,542 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:52:23,544 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:52:23,554 DEBUG ~ Setting SimpleValue typeName for display_name
28 Feb 2015 16:52:23,555 DEBUG ~ Setting SimpleValue typeName for firstName
28 Feb 2015 16:52:23,556 DEBUG ~ Setting SimpleValue typeName for name
28 Feb 2015 16:52:23,557 DEBUG ~ Setting SimpleValue typeName for permalink
28 Feb 2015 16:52:23,558 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:52:23,564 DEBUG ~ Setting SimpleValue typeName for mainId
28 Feb 2015 16:52:23,565 DEBUG ~ Setting SimpleValue typeName for active_email
28 Feb 2015 16:52:23,566 DEBUG ~ Setting SimpleValue typeName for email
28 Feb 2015 16:52:23,567 DEBUG ~ Setting SimpleValue typeName for password
28 Feb 2015 16:52:23,568 DEBUG ~ Setting SimpleValue typeName for presentAtFair
28 Feb 2015 16:52:23,570 DEBUG ~ Setting SimpleValue typeName for presentFriday
28 Feb 2015 16:52:23,577 DEBUG ~ Setting SimpleValue typeName for presentMonday
28 Feb 2015 16:52:23,578 DEBUG ~ Setting SimpleValue typeName for presentSaturday
28 Feb 2015 16:52:23,579 DEBUG ~ Setting SimpleValue typeName for presentSunday
28 Feb 2015 16:52:23,580 DEBUG ~ Setting SimpleValue typeName for presentThursday
28 Feb 2015 16:52:23,581 DEBUG ~ Setting SimpleValue typeName for presentTuesday
28 Feb 2015 16:52:23,589 DEBUG ~ Setting SimpleValue typeName for presentWednesday
28 Feb 2015 16:52:23,590 DEBUG ~ Setting SimpleValue typeName for xingId
28 Feb 2015 16:52:23,591 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:52:23,593 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,593 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,594 DEBUG ~ Processing collection mappings
28 Feb 2015 16:52:23,596 DEBUG ~ Second pass for collection: models.User.xingContacts
28 Feb 2015 16:52:23,597 DEBUG ~ Binding a OneToMany: models.User.xingContacts through an association table
28 Feb 2015 16:52:23,600 DEBUG ~ Mapped collection key: User_id, element: xingContacts_id
28 Feb 2015 16:52:23,601 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:52:23,602 DEBUG ~ Processing association property references
28 Feb 2015 16:52:23,609 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:52:23,610 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:52:23,611 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:52:23,612 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,613 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,626 DEBUG ~ Automatic flush during beforeCompletion(): disabled
28 Feb 2015 16:52:23,627 DEBUG ~ Automatic session close at end of transaction: disabled
28 Feb 2015 16:52:23,628 DEBUG ~ JDBC batch size: 15
28 Feb 2015 16:52:23,629 DEBUG ~ JDBC batch updates for versioned data: disabled
28 Feb 2015 16:52:23,630 DEBUG ~ Scrollable result sets: enabled
28 Feb 2015 16:52:23,631 DEBUG ~ Wrap result sets: disabled
28 Feb 2015 16:52:23,632 DEBUG ~ JDBC3 getGeneratedKeys(): enabled
28 Feb 2015 16:52:23,635 DEBUG ~ multi-tenancy strategy : NONE
28 Feb 2015 16:52:23,636 DEBUG ~ Connection release mode: auto
28 Feb 2015 16:52:23,637 INFO  ~ HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
28 Feb 2015 16:52:23,640 DEBUG ~ Using BatchFetchStyle : LEGACY
28 Feb 2015 16:52:23,641 DEBUG ~ Maximum outer join fetch depth: 2
28 Feb 2015 16:52:23,644 DEBUG ~ Default batch fetch size: 1
28 Feb 2015 16:52:23,645 DEBUG ~ Generate SQL with comments: disabled
28 Feb 2015 16:52:23,646 DEBUG ~ Order SQL updates by primary key: disabled
28 Feb 2015 16:52:23,648 DEBUG ~ Order SQL inserts for batching: disabled
28 Feb 2015 16:52:23,649 DEBUG ~ Default null ordering: none
28 Feb 2015 16:52:23,650 DEBUG ~ Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
28 Feb 2015 16:52:23,659 INFO  ~ HHH000397: Using ASTQueryTranslatorFactory
28 Feb 2015 16:52:23,661 DEBUG ~ Query language substitutions: {}
28 Feb 2015 16:52:23,662 DEBUG ~ JPA-QL strict compliance: enabled
28 Feb 2015 16:52:23,663 DEBUG ~ Second-level cache: enabled
28 Feb 2015 16:52:23,663 DEBUG ~ Query cache: disabled
28 Feb 2015 16:52:23,665 DEBUG ~ Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
28 Feb 2015 16:52:23,672 DEBUG ~ org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
28 Feb 2015 16:52:23,674 DEBUG ~ Optimize cache for minimal puts: disabled
28 Feb 2015 16:52:23,675 DEBUG ~ Structured second-level cache entries: disabled
28 Feb 2015 16:52:23,676 DEBUG ~ Second-level cache direct-reference entries: disabled
28 Feb 2015 16:52:23,677 DEBUG ~ Statistics: disabled
28 Feb 2015 16:52:23,682 DEBUG ~ Deleted entity synthetic identifier rollback: disabled
28 Feb 2015 16:52:23,683 DEBUG ~ Default entity-mode: pojo
28 Feb 2015 16:52:23,684 DEBUG ~ Named query checking : enabled
28 Feb 2015 16:52:23,685 DEBUG ~ Check Nullability in Core (should be disabled when Bean Validation is on): enabled
28 Feb 2015 16:52:23,687 DEBUG ~ Allow initialization of lazy state outside session : : disabled
28 Feb 2015 16:52:23,688 DEBUG ~ JTA Track by Thread: enabled
28 Feb 2015 16:52:23,689 DEBUG ~ Building session factory
28 Feb 2015 16:52:23,693 DEBUG ~ Session factory constructed with filter configurations : {}
28 Feb 2015 16:52:23,694 DEBUG ~ Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, application.path=c:\ximeko, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, sun.nio.ch.bugLevel=, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Windows 8.1, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_60\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_60\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_60\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_60-b19, hibernate.connection.autocommit=true, user.name=just, com.mchange.v2.log.MLog=com.mchange.v2.log.log4j.Log4jMLog, play.version=1.3.0, hibernate.connection.release_mode=auto, user.language=de, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_60\jre\bin, db.user=root, java.version=1.7.0_60, user.timezone=Europe/Berlin, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, javax.persistence.provider=org.hibernate.ejb.HibernatePersistence, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=DE, java.home=C:\Program Files\Java\jdk1.7.0_60\jre, java.vm.info=mixed mode, os.version=6.3, db.pass=test, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeo75971ly94ztyc68i3|4a83faf, dataSourceName -> 1hgeo75971ly94ztyc68i3|4a83faf ], hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=24.60-b09, db.destroyMethod=close, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\just, db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0, java.specification.vendor=Oracle Corporation, db.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.7.0_60\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Vagrant\bin;C:\Program Files\Java\jdk1.7.0_60\bin;C:\Program Files (x86)\Git\cmd;C:\play\play1-1.3.0;C:\Download\maven\apache-maven-3.0.5\bin;., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=play.db.jpa.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=play.server.Server , java.class.path=c:\ximeko\conf;C:\play\play1-1.3.0\framework\play-1.3.0.jar;c:\ximeko\lib\gson-2.3.1-javadoc.jar;c:\ximeko\lib\scribe-1.3.7.jar;C:\play\play1-1.3.0\modules\testrunner\lib\play-testrunner.jar;C:\play\play1-1.3.0\modules\docviewer\lib\play-docviewer.jar;C:\play\play1-1.3.0\framework\lib\activation-1.1.1.jar;C:\play\play1-1.3.0\framework\lib\antlr-2.7.7.jar;C:\play\play1-1.3.0\framework\lib\asm-all-5.0.3.jar;C:\play\play1-1.3.0\framework\lib\async-http-client-1.8.14.jar;C:\play\play1-1.3.0\framework\lib\bcprov-jdk15-1.45.jar;C:\play\play1-1.3.0\framework\lib\c3p0-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\c3p0-oracle-thin-extras-0.9.5.jar;C:\play\play1-1.3.0\framework\lib\cglib-nodep-3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-beanutils-1.8.3.jar;C:\play\play1-1.3.0\framework\lib\commons-codec-1.8.jar;C:\play\play1-1.3.0\framework\lib\commons-collections-3.2.1.jar;C:\play\play1-1.3.0\framework\lib\commons-email-1.3.1.jar;C:\play\play1-1.3.0\framework\lib\commons-fileupload-1.3.jar;C:\play\play1-1.3.0\framework\lib\commons-io-2.4.jar;C:\play\play1-1.3.0\framework\lib\commons-javaflow-1590792.jar;C:\play\play1-1.3.0\framework\lib\commons-lang-2.6.jar;C:\play\play1-1.3.0\framework\lib\commons-logging-1.1.3.jar;C:\play\play1-1.3.0\framework\lib\dom4j-1.6.1.jar;C:\play\play1-1.3.0\framework\lib\ehcache-core-2.6.9.jar;C:\play\play1-1.3.0\framework\lib\ezmorph-1.0.6.jar;C:\play\play1-1.3.0\framework\lib\geronimo-servlet_2.5_spec-1.2.jar;C:\play\play1-1.3.0\framework\lib\groovy-all-2.3.6.jar;C:\play\play1-1.3.0\framework\lib\gson-2.2.4.jar;C:\play\play1-1.3.0\framework\lib\h2-1.3.176.jar;C:\play\play1-1.3.0\framework\lib\hamcrest-core-1.3.jar;C:\play\play1-1.3.0\framework\lib\hibernate-c3p0-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-commons-annotations-4.0.2.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-core-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-entitymanager-4.2.15.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\hibernate-validator-4.1.0.Final.jar;C:\play\play1-1.3.0\framework\lib\ivy-2.3.0.jar;C:\play\play1-1.3.0\framework\lib\jamon-2.75.jar;C:\play\play1-1.3.0\framework\lib\javassist-3.19.0-GA.jar;C:\play\play1-1.3.0\framework\lib\javax.inject-1.0.jar;C:\play\play1-1.3.0\framework\lib\jaxen-1.1.jar;C:\play\play1-1.3.0\framework\lib\jboss-logging-3.1.0.GA.jar;C:\play\play1-1.3.0\framework\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\play\play1-1.3.0\framework\lib\jj-imaging.jar;C:\play\play1-1.3.0\framework\lib\jj-simplecaptcha.jar;C:\play\play1-1.3.0\framework\lib\jj-textile.jar;C:\play\play1-1.3.0\framework\lib\jj-wikitext.jar;C:\play\play1-1.3.0\framework\lib\joda-time-2.5.jar;C:\play\play1-1.3.0\framework\lib\jregex-1.2_01.jar;C:\play\play1-1.3.0\framework\lib\jsr107cache-1.0.jar;C:\play\play1-1.3.0\framework\lib\junit-4.11.jar;C:\play\play1-1.3.0\framework\lib\log4j-1.2.17.jar;C:\play\play1-1.3.0\framework\lib\mail-1.4.7.jar;C:\play\play1-1.3.0\framework\lib\mchange-commons-java-0.2.9.jar;C:\play\play1-1.3.0\framework\lib\mysql-connector-java-5.1.30.jar;C:\play\play1-1.3.0\framework\lib\netty-3.9.4.Final.jar;C:\play\play1-1.3.0\framework\lib\org.eclipse.jdt.core-3.10.0.v20140604-1726.jar;C:\play\play1-1.3.0\framework\lib\oval-1.84.jar;C:\play\play1-1.3.0\framework\lib\postgresql-9.0.jar;C:\play\play1-1.3.0\framework\lib\signpost-core-1.2.1.2.jar;C:\play\play1-1.3.0\framework\lib\slf4j-api-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\slf4j-log4j12-1.7.7.jar;C:\play\play1-1.3.0\framework\lib\snakeyaml-1.13.jar;C:\play\play1-1.3.0\framework\lib\spymemcached-2.10.3.jar;C:\play\play1-1.3.0\framework\lib\validation-api-1.0.0.GA.jar;C:\play\play1-1.3.0\framework\lib\xmlpull-1.1.3.1.jar;C:\play\play1-1.3.0\framework\lib\xstream-1.4.7.jar;C:\play\play1-1.3.0\framework/play-1.3.0.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, sun.os.patch.level=, hibernate.connection.provider_class=org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl, java.io.tmpdir=C:\Users\just\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, play.id=test, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_60\jre\lib\ext;C:\windows\Sun\Java\lib\ext, user.dir=c:\ximeko, javax.persistence.transaction=RESOURCE_LOCAL, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, play.debug=yes, file.encoding=utf-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7}
28 Feb 2015 16:52:23,770 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:52:23,772 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:52:23,774 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:52:23,774 DEBUG ~ Found javax.persistence.PersistenceUtil on classpath.
28 Feb 2015 16:52:23,775 INFO  ~ Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
28 Feb 2015 16:52:23,777 DEBUG ~ No META-INF/validation.xml found. Using annotation based configuration only
28 Feb 2015 16:52:23,795 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.XingContact
28 Feb 2015 16:52:23,798 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.XingContact
28 Feb 2015 16:52:23,800 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.XingContact
28 Feb 2015 16:52:23,804 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.User
28 Feb 2015 16:52:23,808 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.User
28 Feb 2015 16:52:23,810 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.User
28 Feb 2015 16:52:23,811 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,811 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,822 DEBUG ~ Static SQL for entity: models.XingContact
28 Feb 2015 16:52:23,823 DEBUG ~  Version select: select id from XingContact where id =?
28 Feb 2015 16:52:23,823 DEBUG ~  Snapshot select: select xingcontac_.id, xingcontac_.active_email as active_e2_2_, xingcontac_.display_name as display_3_2_, xingcontac_.firstName as firstNam4_2_, xingcontac_.name as name5_2_, xingcontac_.permalink as permalin6_2_, xingcontac_.user_id as user_id8_2_, xingcontac_.xingId as xingId7_2_ from XingContact xingcontac_ where xingcontac_.id=?
28 Feb 2015 16:52:23,824 DEBUG ~  Insert 0: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:52:23,825 DEBUG ~  Update 0: update XingContact set active_email=?, display_name=?, firstName=?, name=?, permalink=?, user_id=?, xingId=? where id=?
28 Feb 2015 16:52:23,825 DEBUG ~  Delete 0: delete from XingContact where id=?
28 Feb 2015 16:52:23,826 DEBUG ~  Identity insert: insert into XingContact (active_email, display_name, firstName, name, permalink, user_id, xingId) values (?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:52:23,834 DEBUG ~ Static SQL for entity: models.User
28 Feb 2015 16:52:23,835 DEBUG ~  Version select: select id from User where id =?
28 Feb 2015 16:52:23,835 DEBUG ~  Snapshot select: select user_.id, user_.active_email as active_e2_0_, user_.email as email3_0_, user_.password as password4_0_, user_.presentAtFair as presentA5_0_, user_.presentFriday as presentF6_0_, user_.presentMonday as presentM7_0_, user_.presentSaturday as presentS8_0_, user_.presentSunday as presentS9_0_, user_.presentThursday as present10_0_, user_.presentTuesday as present11_0_, user_.presentWednesday as present12_0_, user_.xingId as xingId13_0_ from User user_ where user_.id=?
28 Feb 2015 16:52:23,836 DEBUG ~  Insert 0: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:52:23,837 DEBUG ~  Update 0: update User set active_email=?, email=?, password=?, presentAtFair=?, presentFriday=?, presentMonday=?, presentSaturday=?, presentSunday=?, presentThursday=?, presentTuesday=?, presentWednesday=?, xingId=? where id=?
28 Feb 2015 16:52:23,838 DEBUG ~  Delete 0: delete from User where id=?
28 Feb 2015 16:52:23,838 DEBUG ~  Identity insert: insert into User (active_email, email, password, presentAtFair, presentFriday, presentMonday, presentSaturday, presentSunday, presentThursday, presentTuesday, presentWednesday, xingId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
28 Feb 2015 16:52:23,839 DEBUG ~ Static SQL for collection: models.User.xingContacts
28 Feb 2015 16:52:23,839 DEBUG ~  Row insert: insert into User_XingContact (User_id, xingContacts_id) values (?, ?)
28 Feb 2015 16:52:23,840 DEBUG ~  Row update: update User_XingContact set xingContacts_id=? where User_id=? and xingContacts_id=?
28 Feb 2015 16:52:23,841 DEBUG ~  Row delete: delete from User_XingContact where User_id=? and xingContacts_id=?
28 Feb 2015 16:52:23,841 DEBUG ~  One-shot delete: delete from User_XingContact where User_id=?
28 Feb 2015 16:52:23,841 DEBUG ~ Static select for entity models.XingContact [NONE]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:52:23,843 DEBUG ~ Static select for entity models.XingContact [READ]: select xingcontac0_.id as id1_2_1_, xingcontac0_.active_email as active_e2_2_1_, xingcontac0_.display_name as display_3_2_1_, xingcontac0_.firstName as firstNam4_2_1_, xingcontac0_.name as name5_2_1_, xingcontac0_.permalink as permalin6_2_1_, xingcontac0_.user_id as user_id8_2_1_, xingcontac0_.xingId as xingId7_2_1_, user1_.id as id1_0_0_, user1_.active_email as active_e2_0_0_, user1_.email as email3_0_0_, user1_.password as password4_0_0_, user1_.presentAtFair as presentA5_0_0_, user1_.presentFriday as presentF6_0_0_, user1_.presentMonday as presentM7_0_0_, user1_.presentSaturday as presentS8_0_0_, user1_.presentSunday as presentS9_0_0_, user1_.presentThursday as present10_0_0_, user1_.presentTuesday as present11_0_0_, user1_.presentWednesday as present12_0_0_, user1_.xingId as xingId13_0_0_ from XingContact xingcontac0_ left outer join User user1_ on xingcontac0_.user_id=user1_.id where xingcontac0_.id=?
28 Feb 2015 16:52:23,845 DEBUG ~ Static select for entity models.XingContact [UPGRADE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:52:23,845 DEBUG ~ Static select for entity models.XingContact [UPGRADE_NOWAIT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:52:23,846 DEBUG ~ Static select for entity models.XingContact [FORCE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:52:23,849 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_READ]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? lock in share mode
28 Feb 2015 16:52:23,851 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_WRITE]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:52:23,854 DEBUG ~ Static select for entity models.XingContact [PESSIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=? for update
28 Feb 2015 16:52:23,865 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:52:23,866 DEBUG ~ Static select for entity models.XingContact [OPTIMISTIC_FORCE_INCREMENT]: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:52:23,871 DEBUG ~ Static select for action ACTION_MERGE on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:52:23,875 DEBUG ~ Static select for action ACTION_REFRESH on entity models.XingContact: select xingcontac0_.id as id1_2_0_, xingcontac0_.active_email as active_e2_2_0_, xingcontac0_.display_name as display_3_2_0_, xingcontac0_.firstName as firstNam4_2_0_, xingcontac0_.name as name5_2_0_, xingcontac0_.permalink as permalin6_2_0_, xingcontac0_.user_id as user_id8_2_0_, xingcontac0_.xingId as xingId7_2_0_ from XingContact xingcontac0_ where xingcontac0_.id=?
28 Feb 2015 16:52:23,876 DEBUG ~ Static select for entity models.User [NONE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,880 DEBUG ~ Static select for entity models.User [READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,885 DEBUG ~ Static select for entity models.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:52:23,886 DEBUG ~ Static select for entity models.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:52:23,887 DEBUG ~ Static select for entity models.User [FORCE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:52:23,890 DEBUG ~ Static select for entity models.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? lock in share mode
28 Feb 2015 16:52:23,894 DEBUG ~ Static select for entity models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:52:23,900 DEBUG ~ Static select for entity models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=? for update
28 Feb 2015 16:52:23,905 DEBUG ~ Static select for entity models.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,910 DEBUG ~ Static select for entity models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,910 DEBUG ~ Static select for action ACTION_MERGE on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,915 DEBUG ~ Static select for action ACTION_REFRESH on entity models.User: select user0_.id as id1_0_0_, user0_.active_email as active_e2_0_0_, user0_.email as email3_0_0_, user0_.password as password4_0_0_, user0_.presentAtFair as presentA5_0_0_, user0_.presentFriday as presentF6_0_0_, user0_.presentMonday as presentM7_0_0_, user0_.presentSaturday as presentS8_0_0_, user0_.presentSunday as presentS9_0_0_, user0_.presentThursday as present10_0_0_, user0_.presentTuesday as present11_0_0_, user0_.presentWednesday as present12_0_0_, user0_.xingId as xingId13_0_0_ from User user0_ where user0_.id=?
28 Feb 2015 16:52:23,920 DEBUG ~ Static select for collection models.User.xingContacts: select xingcontac0_.User_id as User_id1_0_2_, xingcontac0_.xingContacts_id as xingCont2_1_2_, xingcontac1_.id as id1_2_0_, xingcontac1_.active_email as active_e2_2_0_, xingcontac1_.display_name as display_3_2_0_, xingcontac1_.firstName as firstNam4_2_0_, xingcontac1_.name as name5_2_0_, xingcontac1_.permalink as permalin6_2_0_, xingcontac1_.user_id as user_id8_2_0_, xingcontac1_.xingId as xingId7_2_0_, user2_.id as id1_0_1_, user2_.active_email as active_e2_0_1_, user2_.email as email3_0_1_, user2_.password as password4_0_1_, user2_.presentAtFair as presentA5_0_1_, user2_.presentFriday as presentF6_0_1_, user2_.presentMonday as presentM7_0_1_, user2_.presentSaturday as presentS8_0_1_, user2_.presentSunday as presentS9_0_1_, user2_.presentThursday as present10_0_1_, user2_.presentTuesday as present11_0_1_, user2_.presentWednesday as present12_0_1_, user2_.xingId as xingId13_0_1_ from User_XingContact xingcontac0_ inner join XingContact xingcontac1_ on xingcontac0_.xingContacts_id=xingcontac1_.id left outer join User user2_ on xingcontac1_.user_id=user2_.id where xingcontac0_.User_id=?
28 Feb 2015 16:52:23,929 DEBUG ~ Registering SessionFactory: 4da74b7d-2662-4f0e-ba45-2b86b9dba40f (<unnamed>)
28 Feb 2015 16:52:23,929 DEBUG ~ Not binding SessionFactory to JNDI, no JNDI name configured
28 Feb 2015 16:52:23,929 DEBUG ~ Instantiated session factory
28 Feb 2015 16:52:23,930 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:52:23,930 DEBUG ~ Process annotated classes
28 Feb 2015 16:52:23,930 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:52:23,931 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,933 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,933 DEBUG ~ Processing collection mappings
28 Feb 2015 16:52:23,934 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:52:23,934 DEBUG ~ Processing association property references
28 Feb 2015 16:52:23,934 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:52:23,934 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:52:23,938 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:52:23,938 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,938 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,939 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,940 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,943 DEBUG ~ Processing hbm.xml files
28 Feb 2015 16:52:23,943 DEBUG ~ Process annotated classes
28 Feb 2015 16:52:23,943 DEBUG ~ Processing fk mappings (*ToOne and JoinedSubclass)
28 Feb 2015 16:52:23,944 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,944 DEBUG ~ Processing extends queue
28 Feb 2015 16:52:23,944 DEBUG ~ Processing collection mappings
28 Feb 2015 16:52:23,945 DEBUG ~ Processing native query and ResultSetMapping mappings
28 Feb 2015 16:52:23,950 DEBUG ~ Processing association property references
28 Feb 2015 16:52:23,966 DEBUG ~ Creating tables' unique integer identifiers
28 Feb 2015 16:52:23,967 DEBUG ~ Processing foreign key constraints
28 Feb 2015 16:52:23,968 DEBUG ~ Resolving reference to class: models.XingContact
28 Feb 2015 16:52:23,968 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,969 DEBUG ~ Resolving reference to class: models.User
28 Feb 2015 16:52:23,970 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,971 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,972 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,973 DEBUG ~ Setting dialect [play.db.jpa.MySQLDialect]
28 Feb 2015 16:52:23,974 INFO  ~ HHH000227: Running hbm2ddl schema export
28 Feb 2015 16:52:23,975 DEBUG ~ Import file not found: /import.sql
28 Feb 2015 16:52:24,707 INFO  ~ HHH000230: Schema export complete
28 Feb 2015 16:52:24,709 DEBUG ~ Checking 0 named HQL queries
28 Feb 2015 16:52:24,710 DEBUG ~ Checking 0 named SQL queries
28 Feb 2015 16:52:24,714 DEBUG ~ Statistics initialized [enabled=false]
28 Feb 2015 16:52:24,734 DEBUG ~ Registering EntityManagerFactory: 1c7687ed-c8a2-47bb-8e46-61f14a91235d 
28 Feb 2015 16:52:24,744 DEBUG ~ begin
28 Feb 2015 16:52:24,744 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:52:24,745 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:52:24,745 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:52:24,746 DEBUG ~ disabling autocommit
28 Feb 2015 16:52:24,752 DEBUG ~ parse() - HQL: from models.User where email = ?1
28 Feb 2015 16:52:24,757 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'email'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

28 Feb 2015 16:52:24,760 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:24,761 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:52:24,763 DEBUG ~ FromClause{level=1} : models.User (<no alias>) -> user0_
28 Feb 2015 16:52:24,764 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:52:24,765 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:52:24,765 DEBUG ~ Resolved : {synthetic-alias}.email -> user0_.email
28 Feb 2015 16:52:24,766 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:52:24,767 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( = ( user0_.email {synthetic-alias} email ) ? ) ) )
28 Feb 2015 16:52:24,768 DEBUG ~ Derived SELECT clause created.
28 Feb 2015 16:52:24,769 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:52:24,770 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:52:24,771 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@a60e57e}

28 Feb 2015 16:52:24,774 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:24,774 DEBUG ~ HQL: from models.User where email = ?1
28 Feb 2015 16:52:24,775 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_ where user0_.email=?
28 Feb 2015 16:52:24,775 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:24,836 DEBUG ~ committing
28 Feb 2015 16:52:24,837 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:52:24,837 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:52:24,838 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:52:24,838 DEBUG ~ Released JDBC connection
28 Feb 2015 16:52:35,150 DEBUG ~ begin
28 Feb 2015 16:52:35,150 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:52:35,151 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:52:35,151 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:52:35,151 DEBUG ~ disabling autocommit
28 Feb 2015 16:52:35,155 DEBUG ~ parse() - HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:52:35,157 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

28 Feb 2015 16:52:35,159 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:35,160 DEBUG ~ select << begin [level=1, statement=select]
28 Feb 2015 16:52:35,160 DEBUG ~ FromClause{level=1} : models.User (<no alias>) -> user0_
28 Feb 2015 16:52:35,161 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:52:35,161 DEBUG ~ getDataType() : email -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:52:35,162 DEBUG ~ Resolved : {synthetic-alias}.email -> user0_.email
28 Feb 2015 16:52:35,162 DEBUG ~ Resolved : {synthetic-alias} -> {synthetic-alias}
28 Feb 2015 16:52:35,163 DEBUG ~ getDataType() : password -> org.hibernate.type.StringType@a60e57e
28 Feb 2015 16:52:35,163 DEBUG ~ Resolved : {synthetic-alias}.password -> user0_.password
28 Feb 2015 16:52:35,164 DEBUG ~ select : finishing up [level=1, statement=select]
28 Feb 2015 16:52:35,164 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} User user0_ ) ( where ( AND ( = ( user0_.email {synthetic-alias} email ) ? ) ( = ( user0_.password {synthetic-alias} password ) ? ) ) ) )
28 Feb 2015 16:52:35,164 DEBUG ~ Derived SELECT clause created.
28 Feb 2015 16:52:35,165 DEBUG ~ Using FROM fragment [User user0_]
28 Feb 2015 16:52:35,165 DEBUG ~ select >> end [level=1, statement=select]
28 Feb 2015 16:52:35,166 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=ALL,propertyPath=email,path={synthetic-alias}.email,tableAlias=user0_,className=models.User,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@a60e57e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=ALL,propertyPath=password,path={synthetic-alias}.password,tableAlias=user0_,className=models.User,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@a60e57e}

28 Feb 2015 16:52:35,199 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:35,200 DEBUG ~ HQL: from models.User where email = ?1 AND password = ?2
28 Feb 2015 16:52:35,200 DEBUG ~ SQL: select user0_.id as id1_0_, user0_.active_email as active_e2_0_, user0_.email as email3_0_, user0_.password as password4_0_, user0_.presentAtFair as presentA5_0_, user0_.presentFriday as presentF6_0_, user0_.presentMonday as presentM7_0_, user0_.presentSaturday as presentS8_0_, user0_.presentSunday as presentS9_0_, user0_.presentThursday as present10_0_, user0_.presentTuesday as present11_0_, user0_.presentWednesday as present12_0_, user0_.xingId as xingId13_0_ from User user0_ where user0_.email=? and user0_.password=?
28 Feb 2015 16:52:35,209 DEBUG ~ throwQueryException() : no errors
28 Feb 2015 16:52:35,213 DEBUG ~ committing
28 Feb 2015 16:52:35,219 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:52:35,220 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:52:35,220 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:52:35,220 DEBUG ~ Released JDBC connection
28 Feb 2015 16:52:35,250 DEBUG ~ begin
28 Feb 2015 16:52:35,251 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:52:35,251 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:52:35,252 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:52:35,252 DEBUG ~ disabling autocommit
28 Feb 2015 16:52:35,264 DEBUG ~ committing
28 Feb 2015 16:52:35,265 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:52:35,265 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:52:35,266 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:52:35,266 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:02,206 DEBUG ~ begin
28 Feb 2015 16:53:02,206 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:02,206 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:02,207 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:02,207 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:02,248 DEBUG ~ committing
28 Feb 2015 16:53:02,249 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:02,249 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:02,250 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:02,250 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:04,102 DEBUG ~ begin
28 Feb 2015 16:53:04,102 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:04,103 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:04,103 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:04,103 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:04,107 DEBUG ~ committing
28 Feb 2015 16:53:04,108 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:04,108 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:04,108 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:04,109 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:04,133 DEBUG ~ begin
28 Feb 2015 16:53:04,133 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:04,135 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:04,135 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:04,135 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:04,138 DEBUG ~ suspend()
28 Feb 2015 16:53:04,139 DEBUG ~ push object java.lang.String@494964969/unknown [PrototypeUserTest.class] i[0],l[0],d[0],f[0],o[0],r[0]
28 Feb 2015 16:53:04,139 DEBUG ~ push object java.lang.String@-1859301857/unknown [PrototypeUserTest] i[0],l[0],d[0],f[0],o[1],r[0]
28 Feb 2015 16:53:04,139 DEBUG ~ push int 27 i[0],l[0],d[0],f[0],o[2],r[0]
28 Feb 2015 16:53:04,140 DEBUG ~ committing
28 Feb 2015 16:53:04,140 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:04,141 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:04,141 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:04,141 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:04,144 DEBUG ~ begin
28 Feb 2015 16:53:04,144 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:04,144 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:04,145 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:04,145 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:04,261 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:53:04,268 DEBUG ~ Natively generated identity: 1
28 Feb 2015 16:53:04,270 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,270 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,271 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [<unreferenced>] (initialized)
28 Feb 2015 16:53:04,271 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:53:04,272 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:53:04,272 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,273 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,274 DEBUG ~ Inserting collection: [models.User.xingContacts#1]
28 Feb 2015 16:53:04,274 DEBUG ~ Collection was empty
28 Feb 2015 16:53:04,275 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,276 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,277 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,277 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
28 Feb 2015 16:53:04,278 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
28 Feb 2015 16:53:04,278 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,279 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,280 DEBUG ~ Result set row: 0
28 Feb 2015 16:53:04,281 DEBUG ~ Result row: EntityKey[models.User#1]
28 Feb 2015 16:53:04,282 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:53:04,284 DEBUG ~ Natively generated identity: 2
28 Feb 2015 16:53:04,285 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,286 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,287 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,287 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [<unreferenced>] (initialized)
28 Feb 2015 16:53:04,287 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
28 Feb 2015 16:53:04,287 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
28 Feb 2015 16:53:04,288 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,288 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,288 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,293 DEBUG ~ Inserting collection: [models.User.xingContacts#2]
28 Feb 2015 16:53:04,294 DEBUG ~ Collection was empty
28 Feb 2015 16:53:04,295 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,295 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,304 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,305 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,306 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
28 Feb 2015 16:53:04,306 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
28 Feb 2015 16:53:04,306 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,308 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,309 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,323 DEBUG ~ Result set row: 0
28 Feb 2015 16:53:04,325 DEBUG ~ Result row: EntityKey[models.User#2]
28 Feb 2015 16:53:04,326 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:53:04,328 DEBUG ~ Natively generated identity: 3
28 Feb 2015 16:53:04,331 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,332 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,332 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,333 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,341 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [<unreferenced>] (initialized)
28 Feb 2015 16:53:04,342 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
28 Feb 2015 16:53:04,343 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 3 collections
28 Feb 2015 16:53:04,343 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,344 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:53:04,357 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,357 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,366 DEBUG ~ Inserting collection: [models.User.xingContacts#3]
28 Feb 2015 16:53:04,367 DEBUG ~ Collection was empty
28 Feb 2015 16:53:04,368 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,369 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,369 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,381 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,381 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:53:04,382 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
28 Feb 2015 16:53:04,382 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
28 Feb 2015 16:53:04,386 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,386 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:53:04,386 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,395 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,397 DEBUG ~ Result set row: 0
28 Feb 2015 16:53:04,398 DEBUG ~ Result row: EntityKey[models.User#3]
28 Feb 2015 16:53:04,399 DEBUG ~ Executing identity-insert immediately
28 Feb 2015 16:53:04,407 DEBUG ~ Natively generated identity: 4
28 Feb 2015 16:53:04,408 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,409 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,409 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,410 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,418 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:53:04,418 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [<unreferenced>] (initialized)
28 Feb 2015 16:53:04,419 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:53:04,419 DEBUG ~ Flushed: 1 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:53:04,427 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,428 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:53:04,428 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:53:04,438 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,439 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,449 DEBUG ~ Inserting collection: [models.User.xingContacts#4]
28 Feb 2015 16:53:04,449 DEBUG ~ Collection was empty
28 Feb 2015 16:53:04,450 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,451 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,451 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,485 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,486 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:53:04,486 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [models.User.xingContacts#4] (initialized)
28 Feb 2015 16:53:04,487 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:53:04,487 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:53:04,488 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,488 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:53:04,489 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:53:04,489 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,490 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,499 DEBUG ~ Result set row: 0
28 Feb 2015 16:53:04,500 DEBUG ~ Result row: EntityKey[models.User#4]
28 Feb 2015 16:53:04,500 DEBUG ~ committing
28 Feb 2015 16:53:04,500 DEBUG ~ Processing flush-time cascades
28 Feb 2015 16:53:04,501 DEBUG ~ Dirty checking collections
28 Feb 2015 16:53:04,501 DEBUG ~ Collection found: [models.User.xingContacts#1], was: [models.User.xingContacts#1] (initialized)
28 Feb 2015 16:53:04,511 DEBUG ~ Collection found: [models.User.xingContacts#2], was: [models.User.xingContacts#2] (initialized)
28 Feb 2015 16:53:04,511 DEBUG ~ Collection found: [models.User.xingContacts#3], was: [models.User.xingContacts#3] (initialized)
28 Feb 2015 16:53:04,512 DEBUG ~ Collection found: [models.User.xingContacts#4], was: [models.User.xingContacts#4] (initialized)
28 Feb 2015 16:53:04,512 DEBUG ~ Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
28 Feb 2015 16:53:04,512 DEBUG ~ Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
28 Feb 2015 16:53:04,522 DEBUG ~ Listing entities:
28 Feb 2015 16:53:04,522 DEBUG ~ models.User{presentWednesday=false, password=geheim, presentSunday=true, presentThursday=true, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=true, presentSaturday=true, email=hannah.soj@er.de, xingId=12557029_6f254b, mainId=4, presentMonday=false}
28 Feb 2015 16:53:04,522 DEBUG ~ models.User{presentWednesday=false, password=987654, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=false, active_email=null, presentFriday=false, presentSaturday=false, email=evelin.oracle@home.de, xingId=null, mainId=3, presentMonday=false}
28 Feb 2015 16:53:04,533 DEBUG ~ models.User{presentWednesday=false, password=1337!, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=true, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=horst.evers@home.de, xingId=21972545_14dd32, mainId=2, presentMonday=true}
28 Feb 2015 16:53:04,533 DEBUG ~ models.User{presentWednesday=false, password=12345, presentSunday=false, presentThursday=false, xingContacts=[], presentTuesday=false, presentAtFair=true, active_email=null, presentFriday=false, presentSaturday=false, email=gordan.just@proto.de, xingId=null, mainId=1, presentMonday=false}
28 Feb 2015 16:53:04,545 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:04,545 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:04,545 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:04,546 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:04,553 DEBUG ~ begin
28 Feb 2015 16:53:04,554 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:04,554 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:04,554 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:04,554 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:04,555 DEBUG ~ pop int 27 i[0],l[0],d[0],f[0],o[2],r[0]
28 Feb 2015 16:53:04,556 DEBUG ~ pop object java.lang.String@-1859301857/unknown [PrototypeUserTest] 
28 Feb 2015 16:53:04,556 DEBUG ~ pop object java.lang.String@494964969/unknown [PrototypeUserTest.class] 
28 Feb 2015 16:53:04,585 DEBUG ~ committing
28 Feb 2015 16:53:04,586 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:04,586 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:04,587 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:04,588 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:04,609 DEBUG ~ begin
28 Feb 2015 16:53:04,609 DEBUG ~ Obtaining JDBC connection
28 Feb 2015 16:53:04,609 DEBUG ~ Obtained JDBC connection
28 Feb 2015 16:53:04,610 DEBUG ~ initial autocommit status: true
28 Feb 2015 16:53:04,610 DEBUG ~ disabling autocommit
28 Feb 2015 16:53:04,612 DEBUG ~ committing
28 Feb 2015 16:53:04,613 DEBUG ~ committed JDBC Connection
28 Feb 2015 16:53:04,613 DEBUG ~ re-enabling autocommit
28 Feb 2015 16:53:04,613 DEBUG ~ Releasing JDBC connection
28 Feb 2015 16:53:04,613 DEBUG ~ Released JDBC connection
28 Feb 2015 16:53:09,176 DEBUG ~ HHH000031: Closing
28 Feb 2015 16:53:09,179 DEBUG ~ Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
28 Feb 2015 16:53:09,181 DEBUG ~ Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
28 Feb 2015 16:53:09,182 DEBUG ~ Remove: name=1c7687ed-c8a2-47bb-8e46-61f14a91235d
